Useless nonterminals

   array_init
   array_init_list
   expression_list


Terminals which are not used

   UNSIGNED
   CONST
   SIGNED
   STRUCT
   UNION
   ENUM
   VOLATILE
   GOTO
   TYPEDEF
   AUTO
   REGISTER
   EXTERN
   STATIC
   SIZEOF
   STRING
   SINGLE_COMMENT
   COMMENTS


Useless rules

  109 var_decl: array_identifier ASSIGN array_init

  110 array_init: LEFT_BRACE array_init_list RIGHT_BRACE
  111           | LEFT_BRACE expression_list RIGHT_BRACE

  112 array_init_list: array_init_list COMMA array_init
  113                | array_init

  114 expression_list: expression_list COMMA expression


Rules never reduced

   81 loopBody: SEMI


State 82 conflicts: 12 shift/reduce
State 84 conflicts: 13 shift/reduce
State 125 conflicts: 13 shift/reduce
State 126 conflicts: 13 shift/reduce
State 127 conflicts: 13 shift/reduce
State 128 conflicts: 13 shift/reduce
State 129 conflicts: 13 shift/reduce
State 130 conflicts: 12 shift/reduce
State 131 conflicts: 13 shift/reduce
State 132 conflicts: 13 shift/reduce
State 133 conflicts: 13 shift/reduce
State 134 conflicts: 13 shift/reduce
State 135 conflicts: 13 shift/reduce
State 136 conflicts: 13 shift/reduce
State 137 conflicts: 13 shift/reduce
State 138 conflicts: 13 shift/reduce
State 155 conflicts: 1 shift/reduce
State 158 conflicts: 22 reduce/reduce


Grammar

    0 $accept: program $end

    1 program: declaration_list

    2 declaration_list: declaration_list declaration
    3                 | declaration

    4 var_declaration: type var_declaration_list SEMI

    5 type: INT
    6     | DOUBLE
    7     | FLOAT
    8     | VOID
    9     | LONG
   10     | SHORT
   11     | CHAR

   12 var_declaration_list: var_declaration_list COMMA var_decl
   13                     | var_decl

   14 var_decl: IDENTIFIER
   15         | IDENTIFIER ASSIGN expression
   16         | array_identifier

   17 array_identifier: IDENTIFIER LEFT_BRACKET INTEGER RIGHT_BRACKET

   18 expression: expression PLUS expression
   19           | expression MINUS expression
   20           | expression MUL expression
   21           | expression DIV expression
   22           | expression MOD expression
   23           | LEFT_PAREN expression RIGHT_PAREN
   24           | expression LESS expression
   25           | expression LESS_EQUAL expression
   26           | expression GREATER expression
   27           | expression GREATER_EQUAL expression
   28           | expression AND_AND expression
   29           | expression OR_OR expression
   30           | NOT expression
   31           | expression EQUAL expression
   32           | expression NOT_EQUAL expression
   33           | MINUS expression
   34           | var ASSIGN expression
   35           | PLUS_PLUS var
   36           | var PLUS_PLUS
   37           | MINUS_MINUS var
   38           | var MINUS_MINUS
   39           | var
   40           | call
   41           | constant

   42 var: IDENTIFIER
   43    | array_identifier

   44 constant: INTEGER
   45         | DOUBLE_NUMBER
   46         | CHARACTER

   47 call: IDENTIFIER LEFT_PAREN args RIGHT_PAREN

   48 args: args_list
   49     | /* empty */

   50 args_list: args_list COMMA expression
   51          | expression

   52 declaration: function_declaration
   53            | var_declaration

   54 function_declaration: function_declaration_only
   55                     | function_definition

   56 function_declaration_only: function_decl SEMI

   57 function_definition: function_decl function_body

   58 function_decl: type IDENTIFIER LEFT_PAREN function_args RIGHT_PAREN

   59 function_args: function_arg_list
   60              | /* empty */

   61 function_arg_list: function_arg
   62                  | function_arg COMMA function_arg_list

   63 function_arg: type IDENTIFIER

   64 function_body: LEFT_BRACE function_statements RIGHT_BRACE

   65 function_statements: statements return_statement

   66 return_statement: RETURN IDENTIFIER SEMI
   67                 | /* empty */

   68 statements: statement statements
   69           | /* empty */

   70 statement: iterationStatement
   71          | selectionStatement
   72          | expressionStatement
   73          | jumpStatement

   74 expressionStatement: expression SEMI
   75                    | SEMI

   76 iterationStatement: WHILE LEFT_PAREN expression RIGHT_PAREN loopBody
   77                   | DO compoundStatement WHILE LEFT_PAREN expression RIGHT_PAREN SEMI
   78                   | FOR LEFT_PAREN forCondition RIGHT_PAREN loopBody

   79 loopBody: statement
   80         | compoundStatement
   81         | SEMI

   82 compoundStatement: LEFT_BRACE statements RIGHT_BRACE

   83 forCondition: forInitList SEMI forExpression SEMI incrementExpressionList

   84 forExpression: expression
   85              | /* empty */

   86 incrementExpressionList: expressions
   87                        | /* empty */

   88 expressions: expression COMMA expressions
   89            | expression

   90 forInitList: /* empty */
   91            | forDeclaration
   92            | expressions

   93 forDeclaration: type var_declaration_list

   94 jumpStatement: CONTINUE SEMI
   95              | BREAK SEMI

   96 selectionStatement: ifStatement
   97                   | switchStatement

   98 ifStatement: IF LEFT_PAREN expression RIGHT_PAREN ifBody
   99            | IF LEFT_PAREN expression RIGHT_PAREN ifBody ELSE elseBody

  100 ifBody: compoundStatement
  101       | statement

  102 elseBody: compoundStatement
  103         | statement

  104 switchStatement: SWITCH LEFT_PAREN expression RIGHT_PAREN LEFT_BRACE labeledStatementList RIGHT_BRACE

  105 labeledStatementList: labeledStatement labeledStatementList
  106                     | /* empty */

  107 labeledStatement: CASE constant COLON statements
  108                 | DEFAULT COLON statements


Terminals, with rules where they appear

$end (0) 0
error (256)
INT (258) 5
LONG (259) 9
FLOAT (260) 7
SHORT (261) 10
VOID (262) 8
DOUBLE (263) 6
CHAR (264) 11
UNSIGNED (265)
CONST (266)
SIGNED (267)
STRUCT (268)
UNION (269)
ENUM (270)
VOLATILE (271)
IF (272) 98 99
ELSE (273) 99
SWITCH (274) 104
GOTO (275)
CASE (276) 107
DO (277) 77
WHILE (278) 76 77
FOR (279) 78
CONTINUE (280) 94
BREAK (281) 95
RETURN (282) 66
DEFAULT (283) 108
TYPEDEF (284)
AUTO (285)
REGISTER (286)
EXTERN (287)
STATIC (288)
SIZEOF (289)
IDENTIFIER (290) 14 15 17 42 47 58 63 66
INTEGER (291) 17 44
DOUBLE_NUMBER (292) 45
CHARACTER (293) 46
STRING (294)
SINGLE_COMMENT (295)
COMMENTS (296)
COLON (297) 107 108
LEFT_PAREN (298) 23 47 58 76 77 78 98 99 104
RIGHT_PAREN (299) 23 47 58 76 77 78 98 99 104
LEFT_BRACKET (300) 17
RIGHT_BRACKET (301) 17
LEFT_BRACE (302) 64 82 104
RIGHT_BRACE (303) 64 82 104
LESS (304) 24
LESS_EQUAL (305) 25
GREATER (306) 26
GREATER_EQUAL (307) 27
PLUS (308) 18
PLUS_PLUS (309) 35 36
MINUS (310) 19 33
MINUS_MINUS (311) 37 38
DIV (312) 21
MOD (313) 22
MUL (314) 20
AND_AND (315) 28
OR_OR (316) 29
EQUAL (317) 31
NOT_EQUAL (318) 32
NOT (319) 30
COMMA (320) 12 50 62 88
SEMI (321) 4 56 66 74 75 77 81 83 94 95
ASSIGN (322) 15 34
NEG (323)


Nonterminals, with rules where they appear

$accept (69)
    on left: 0
program (70)
    on left: 1, on right: 0
declaration_list (71)
    on left: 2 3, on right: 1 2
var_declaration (72)
    on left: 4, on right: 53
type (73)
    on left: 5 6 7 8 9 10 11, on right: 4 58 63 93
var_declaration_list (74)
    on left: 12 13, on right: 4 12 93
var_decl (75)
    on left: 14 15 16, on right: 12 13
array_identifier (76)
    on left: 17, on right: 16 43
expression (77)
    on left: 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35
    36 37 38 39 40 41, on right: 15 18 19 20 21 22 23 24 25 26 27 28
    29 30 31 32 33 34 50 51 74 76 77 84 88 89 98 99 104
var (78)
    on left: 42 43, on right: 34 35 36 37 38 39
constant (79)
    on left: 44 45 46, on right: 41 107
call (80)
    on left: 47, on right: 40
args (81)
    on left: 48 49, on right: 47
args_list (82)
    on left: 50 51, on right: 48 50
declaration (83)
    on left: 52 53, on right: 2 3
function_declaration (84)
    on left: 54 55, on right: 52
function_declaration_only (85)
    on left: 56, on right: 54
function_definition (86)
    on left: 57, on right: 55
function_decl (87)
    on left: 58, on right: 56 57
function_args (88)
    on left: 59 60, on right: 58
function_arg_list (89)
    on left: 61 62, on right: 59 62
function_arg (90)
    on left: 63, on right: 61 62
function_body (91)
    on left: 64, on right: 57
function_statements (92)
    on left: 65, on right: 64
return_statement (93)
    on left: 66 67, on right: 65
statements (94)
    on left: 68 69, on right: 65 68 82 107 108
statement (95)
    on left: 70 71 72 73, on right: 68 79 101 103
expressionStatement (96)
    on left: 74 75, on right: 72
iterationStatement (97)
    on left: 76 77 78, on right: 70
loopBody (98)
    on left: 79 80 81, on right: 76 78
compoundStatement (99)
    on left: 82, on right: 77 80 100 102
forCondition (100)
    on left: 83, on right: 78
forExpression (101)
    on left: 84 85, on right: 83
incrementExpressionList (102)
    on left: 86 87, on right: 83
expressions (103)
    on left: 88 89, on right: 86 88 92
forInitList (104)
    on left: 90 91 92, on right: 83
forDeclaration (105)
    on left: 93, on right: 91
jumpStatement (106)
    on left: 94 95, on right: 73
selectionStatement (107)
    on left: 96 97, on right: 71
ifStatement (108)
    on left: 98 99, on right: 96
ifBody (109)
    on left: 100 101, on right: 98 99
elseBody (110)
    on left: 102 103, on right: 99
switchStatement (111)
    on left: 104, on right: 97
labeledStatementList (112)
    on left: 105 106, on right: 104 105
labeledStatement (113)
    on left: 107 108, on right: 105


state 0

    0 $accept: . program $end

    INT     shift, and go to state 1
    LONG    shift, and go to state 2
    FLOAT   shift, and go to state 3
    SHORT   shift, and go to state 4
    VOID    shift, and go to state 5
    DOUBLE  shift, and go to state 6
    CHAR    shift, and go to state 7

    program                    go to state 8
    declaration_list           go to state 9
    var_declaration            go to state 10
    type                       go to state 11
    declaration                go to state 12
    function_declaration       go to state 13
    function_declaration_only  go to state 14
    function_definition        go to state 15
    function_decl              go to state 16


state 1

    5 type: INT .

    $default  reduce using rule 5 (type)


state 2

    9 type: LONG .

    $default  reduce using rule 9 (type)


state 3

    7 type: FLOAT .

    $default  reduce using rule 7 (type)


state 4

   10 type: SHORT .

    $default  reduce using rule 10 (type)


state 5

    8 type: VOID .

    $default  reduce using rule 8 (type)


state 6

    6 type: DOUBLE .

    $default  reduce using rule 6 (type)


state 7

   11 type: CHAR .

    $default  reduce using rule 11 (type)


state 8

    0 $accept: program . $end

    $end  shift, and go to state 17


state 9

    1 program: declaration_list .
    2 declaration_list: declaration_list . declaration

    INT     shift, and go to state 1
    LONG    shift, and go to state 2
    FLOAT   shift, and go to state 3
    SHORT   shift, and go to state 4
    VOID    shift, and go to state 5
    DOUBLE  shift, and go to state 6
    CHAR    shift, and go to state 7

    $default  reduce using rule 1 (program)

    var_declaration            go to state 10
    type                       go to state 11
    declaration                go to state 18
    function_declaration       go to state 13
    function_declaration_only  go to state 14
    function_definition        go to state 15
    function_decl              go to state 16


state 10

   53 declaration: var_declaration .

    $default  reduce using rule 53 (declaration)


state 11

    4 var_declaration: type . var_declaration_list SEMI
   58 function_decl: type . IDENTIFIER LEFT_PAREN function_args RIGHT_PAREN

    IDENTIFIER  shift, and go to state 19

    var_declaration_list  go to state 20
    var_decl              go to state 21
    array_identifier      go to state 22


state 12

    3 declaration_list: declaration .

    $default  reduce using rule 3 (declaration_list)


state 13

   52 declaration: function_declaration .

    $default  reduce using rule 52 (declaration)


state 14

   54 function_declaration: function_declaration_only .

    $default  reduce using rule 54 (function_declaration)


state 15

   55 function_declaration: function_definition .

    $default  reduce using rule 55 (function_declaration)


state 16

   56 function_declaration_only: function_decl . SEMI
   57 function_definition: function_decl . function_body

    LEFT_BRACE  shift, and go to state 23
    SEMI        shift, and go to state 24

    function_body  go to state 25


state 17

    0 $accept: program $end .

    $default  accept


state 18

    2 declaration_list: declaration_list declaration .

    $default  reduce using rule 2 (declaration_list)


state 19

   14 var_decl: IDENTIFIER .
   15         | IDENTIFIER . ASSIGN expression
   17 array_identifier: IDENTIFIER . LEFT_BRACKET INTEGER RIGHT_BRACKET
   58 function_decl: type IDENTIFIER . LEFT_PAREN function_args RIGHT_PAREN

    LEFT_PAREN    shift, and go to state 26
    LEFT_BRACKET  shift, and go to state 27
    ASSIGN        shift, and go to state 28

    $default  reduce using rule 14 (var_decl)


state 20

    4 var_declaration: type var_declaration_list . SEMI
   12 var_declaration_list: var_declaration_list . COMMA var_decl

    COMMA  shift, and go to state 29
    SEMI   shift, and go to state 30


state 21

   13 var_declaration_list: var_decl .

    $default  reduce using rule 13 (var_declaration_list)


state 22

   16 var_decl: array_identifier .

    $default  reduce using rule 16 (var_decl)


state 23

   64 function_body: LEFT_BRACE . function_statements RIGHT_BRACE

    IF             shift, and go to state 31
    SWITCH         shift, and go to state 32
    DO             shift, and go to state 33
    WHILE          shift, and go to state 34
    FOR            shift, and go to state 35
    CONTINUE       shift, and go to state 36
    BREAK          shift, and go to state 37
    IDENTIFIER     shift, and go to state 38
    INTEGER        shift, and go to state 39
    DOUBLE_NUMBER  shift, and go to state 40
    CHARACTER      shift, and go to state 41
    LEFT_PAREN     shift, and go to state 42
    PLUS_PLUS      shift, and go to state 43
    MINUS          shift, and go to state 44
    MINUS_MINUS    shift, and go to state 45
    NOT            shift, and go to state 46
    SEMI           shift, and go to state 47

    $default  reduce using rule 69 (statements)

    array_identifier     go to state 48
    expression           go to state 49
    var                  go to state 50
    constant             go to state 51
    call                 go to state 52
    function_statements  go to state 53
    statements           go to state 54
    statement            go to state 55
    expressionStatement  go to state 56
    iterationStatement   go to state 57
    jumpStatement        go to state 58
    selectionStatement   go to state 59
    ifStatement          go to state 60
    switchStatement      go to state 61


state 24

   56 function_declaration_only: function_decl SEMI .

    $default  reduce using rule 56 (function_declaration_only)


state 25

   57 function_definition: function_decl function_body .

    $default  reduce using rule 57 (function_definition)


state 26

   58 function_decl: type IDENTIFIER LEFT_PAREN . function_args RIGHT_PAREN

    INT     shift, and go to state 1
    LONG    shift, and go to state 2
    FLOAT   shift, and go to state 3
    SHORT   shift, and go to state 4
    VOID    shift, and go to state 5
    DOUBLE  shift, and go to state 6
    CHAR    shift, and go to state 7

    $default  reduce using rule 60 (function_args)

    type               go to state 62
    function_args      go to state 63
    function_arg_list  go to state 64
    function_arg       go to state 65


state 27

   17 array_identifier: IDENTIFIER LEFT_BRACKET . INTEGER RIGHT_BRACKET

    INTEGER  shift, and go to state 66


state 28

   15 var_decl: IDENTIFIER ASSIGN . expression

    IDENTIFIER     shift, and go to state 38
    INTEGER        shift, and go to state 39
    DOUBLE_NUMBER  shift, and go to state 40
    CHARACTER      shift, and go to state 41
    LEFT_PAREN     shift, and go to state 42
    PLUS_PLUS      shift, and go to state 43
    MINUS          shift, and go to state 44
    MINUS_MINUS    shift, and go to state 45
    NOT            shift, and go to state 46

    array_identifier  go to state 48
    expression        go to state 67
    var               go to state 50
    constant          go to state 51
    call              go to state 52


state 29

   12 var_declaration_list: var_declaration_list COMMA . var_decl

    IDENTIFIER  shift, and go to state 68

    var_decl          go to state 69
    array_identifier  go to state 22


state 30

    4 var_declaration: type var_declaration_list SEMI .

    $default  reduce using rule 4 (var_declaration)


state 31

   98 ifStatement: IF . LEFT_PAREN expression RIGHT_PAREN ifBody
   99            | IF . LEFT_PAREN expression RIGHT_PAREN ifBody ELSE elseBody

    LEFT_PAREN  shift, and go to state 70


state 32

  104 switchStatement: SWITCH . LEFT_PAREN expression RIGHT_PAREN LEFT_BRACE labeledStatementList RIGHT_BRACE

    LEFT_PAREN  shift, and go to state 71


state 33

   77 iterationStatement: DO . compoundStatement WHILE LEFT_PAREN expression RIGHT_PAREN SEMI

    LEFT_BRACE  shift, and go to state 72

    compoundStatement  go to state 73


state 34

   76 iterationStatement: WHILE . LEFT_PAREN expression RIGHT_PAREN loopBody

    LEFT_PAREN  shift, and go to state 74


state 35

   78 iterationStatement: FOR . LEFT_PAREN forCondition RIGHT_PAREN loopBody

    LEFT_PAREN  shift, and go to state 75


state 36

   94 jumpStatement: CONTINUE . SEMI

    SEMI  shift, and go to state 76


state 37

   95 jumpStatement: BREAK . SEMI

    SEMI  shift, and go to state 77


state 38

   17 array_identifier: IDENTIFIER . LEFT_BRACKET INTEGER RIGHT_BRACKET
   42 var: IDENTIFIER .
   47 call: IDENTIFIER . LEFT_PAREN args RIGHT_PAREN

    LEFT_PAREN    shift, and go to state 78
    LEFT_BRACKET  shift, and go to state 27

    $default  reduce using rule 42 (var)


state 39

   44 constant: INTEGER .

    $default  reduce using rule 44 (constant)


state 40

   45 constant: DOUBLE_NUMBER .

    $default  reduce using rule 45 (constant)


state 41

   46 constant: CHARACTER .

    $default  reduce using rule 46 (constant)


state 42

   23 expression: LEFT_PAREN . expression RIGHT_PAREN

    IDENTIFIER     shift, and go to state 38
    INTEGER        shift, and go to state 39
    DOUBLE_NUMBER  shift, and go to state 40
    CHARACTER      shift, and go to state 41
    LEFT_PAREN     shift, and go to state 42
    PLUS_PLUS      shift, and go to state 43
    MINUS          shift, and go to state 44
    MINUS_MINUS    shift, and go to state 45
    NOT            shift, and go to state 46

    array_identifier  go to state 48
    expression        go to state 79
    var               go to state 50
    constant          go to state 51
    call              go to state 52


state 43

   35 expression: PLUS_PLUS . var

    IDENTIFIER  shift, and go to state 80

    array_identifier  go to state 48
    var               go to state 81


state 44

   33 expression: MINUS . expression

    IDENTIFIER     shift, and go to state 38
    INTEGER        shift, and go to state 39
    DOUBLE_NUMBER  shift, and go to state 40
    CHARACTER      shift, and go to state 41
    LEFT_PAREN     shift, and go to state 42
    PLUS_PLUS      shift, and go to state 43
    MINUS          shift, and go to state 44
    MINUS_MINUS    shift, and go to state 45
    NOT            shift, and go to state 46

    array_identifier  go to state 48
    expression        go to state 82
    var               go to state 50
    constant          go to state 51
    call              go to state 52


state 45

   37 expression: MINUS_MINUS . var

    IDENTIFIER  shift, and go to state 80

    array_identifier  go to state 48
    var               go to state 83


state 46

   30 expression: NOT . expression

    IDENTIFIER     shift, and go to state 38
    INTEGER        shift, and go to state 39
    DOUBLE_NUMBER  shift, and go to state 40
    CHARACTER      shift, and go to state 41
    LEFT_PAREN     shift, and go to state 42
    PLUS_PLUS      shift, and go to state 43
    MINUS          shift, and go to state 44
    MINUS_MINUS    shift, and go to state 45
    NOT            shift, and go to state 46

    array_identifier  go to state 48
    expression        go to state 84
    var               go to state 50
    constant          go to state 51
    call              go to state 52


state 47

   75 expressionStatement: SEMI .

    $default  reduce using rule 75 (expressionStatement)


state 48

   43 var: array_identifier .

    $default  reduce using rule 43 (var)


state 49

   18 expression: expression . PLUS expression
   19           | expression . MINUS expression
   20           | expression . MUL expression
   21           | expression . DIV expression
   22           | expression . MOD expression
   24           | expression . LESS expression
   25           | expression . LESS_EQUAL expression
   26           | expression . GREATER expression
   27           | expression . GREATER_EQUAL expression
   28           | expression . AND_AND expression
   29           | expression . OR_OR expression
   31           | expression . EQUAL expression
   32           | expression . NOT_EQUAL expression
   74 expressionStatement: expression . SEMI

    LESS           shift, and go to state 85
    LESS_EQUAL     shift, and go to state 86
    GREATER        shift, and go to state 87
    GREATER_EQUAL  shift, and go to state 88
    PLUS           shift, and go to state 89
    MINUS          shift, and go to state 90
    DIV            shift, and go to state 91
    MOD            shift, and go to state 92
    MUL            shift, and go to state 93
    AND_AND        shift, and go to state 94
    OR_OR          shift, and go to state 95
    EQUAL          shift, and go to state 96
    NOT_EQUAL      shift, and go to state 97
    SEMI           shift, and go to state 98


state 50

   34 expression: var . ASSIGN expression
   36           | var . PLUS_PLUS
   38           | var . MINUS_MINUS
   39           | var .

    PLUS_PLUS    shift, and go to state 99
    MINUS_MINUS  shift, and go to state 100
    ASSIGN       shift, and go to state 101

    $default  reduce using rule 39 (expression)


state 51

   41 expression: constant .

    $default  reduce using rule 41 (expression)


state 52

   40 expression: call .

    $default  reduce using rule 40 (expression)


state 53

   64 function_body: LEFT_BRACE function_statements . RIGHT_BRACE

    RIGHT_BRACE  shift, and go to state 102


state 54

   65 function_statements: statements . return_statement

    RETURN  shift, and go to state 103

    $default  reduce using rule 67 (return_statement)

    return_statement  go to state 104


state 55

   68 statements: statement . statements

    IF             shift, and go to state 31
    SWITCH         shift, and go to state 32
    DO             shift, and go to state 33
    WHILE          shift, and go to state 34
    FOR            shift, and go to state 35
    CONTINUE       shift, and go to state 36
    BREAK          shift, and go to state 37
    IDENTIFIER     shift, and go to state 38
    INTEGER        shift, and go to state 39
    DOUBLE_NUMBER  shift, and go to state 40
    CHARACTER      shift, and go to state 41
    LEFT_PAREN     shift, and go to state 42
    PLUS_PLUS      shift, and go to state 43
    MINUS          shift, and go to state 44
    MINUS_MINUS    shift, and go to state 45
    NOT            shift, and go to state 46
    SEMI           shift, and go to state 47

    $default  reduce using rule 69 (statements)

    array_identifier     go to state 48
    expression           go to state 49
    var                  go to state 50
    constant             go to state 51
    call                 go to state 52
    statements           go to state 105
    statement            go to state 55
    expressionStatement  go to state 56
    iterationStatement   go to state 57
    jumpStatement        go to state 58
    selectionStatement   go to state 59
    ifStatement          go to state 60
    switchStatement      go to state 61


state 56

   72 statement: expressionStatement .

    $default  reduce using rule 72 (statement)


state 57

   70 statement: iterationStatement .

    $default  reduce using rule 70 (statement)


state 58

   73 statement: jumpStatement .

    $default  reduce using rule 73 (statement)


state 59

   71 statement: selectionStatement .

    $default  reduce using rule 71 (statement)


state 60

   96 selectionStatement: ifStatement .

    $default  reduce using rule 96 (selectionStatement)


state 61

   97 selectionStatement: switchStatement .

    $default  reduce using rule 97 (selectionStatement)


state 62

   63 function_arg: type . IDENTIFIER

    IDENTIFIER  shift, and go to state 106


state 63

   58 function_decl: type IDENTIFIER LEFT_PAREN function_args . RIGHT_PAREN

    RIGHT_PAREN  shift, and go to state 107


state 64

   59 function_args: function_arg_list .

    $default  reduce using rule 59 (function_args)


state 65

   61 function_arg_list: function_arg .
   62                  | function_arg . COMMA function_arg_list

    COMMA  shift, and go to state 108

    $default  reduce using rule 61 (function_arg_list)


state 66

   17 array_identifier: IDENTIFIER LEFT_BRACKET INTEGER . RIGHT_BRACKET

    RIGHT_BRACKET  shift, and go to state 109


state 67

   15 var_decl: IDENTIFIER ASSIGN expression .
   18 expression: expression . PLUS expression
   19           | expression . MINUS expression
   20           | expression . MUL expression
   21           | expression . DIV expression
   22           | expression . MOD expression
   24           | expression . LESS expression
   25           | expression . LESS_EQUAL expression
   26           | expression . GREATER expression
   27           | expression . GREATER_EQUAL expression
   28           | expression . AND_AND expression
   29           | expression . OR_OR expression
   31           | expression . EQUAL expression
   32           | expression . NOT_EQUAL expression

    LESS           shift, and go to state 85
    LESS_EQUAL     shift, and go to state 86
    GREATER        shift, and go to state 87
    GREATER_EQUAL  shift, and go to state 88
    PLUS           shift, and go to state 89
    MINUS          shift, and go to state 90
    DIV            shift, and go to state 91
    MOD            shift, and go to state 92
    MUL            shift, and go to state 93
    AND_AND        shift, and go to state 94
    OR_OR          shift, and go to state 95
    EQUAL          shift, and go to state 96
    NOT_EQUAL      shift, and go to state 97

    $default  reduce using rule 15 (var_decl)


state 68

   14 var_decl: IDENTIFIER .
   15         | IDENTIFIER . ASSIGN expression
   17 array_identifier: IDENTIFIER . LEFT_BRACKET INTEGER RIGHT_BRACKET

    LEFT_BRACKET  shift, and go to state 27
    ASSIGN        shift, and go to state 28

    $default  reduce using rule 14 (var_decl)


state 69

   12 var_declaration_list: var_declaration_list COMMA var_decl .

    $default  reduce using rule 12 (var_declaration_list)


state 70

   98 ifStatement: IF LEFT_PAREN . expression RIGHT_PAREN ifBody
   99            | IF LEFT_PAREN . expression RIGHT_PAREN ifBody ELSE elseBody

    IDENTIFIER     shift, and go to state 38
    INTEGER        shift, and go to state 39
    DOUBLE_NUMBER  shift, and go to state 40
    CHARACTER      shift, and go to state 41
    LEFT_PAREN     shift, and go to state 42
    PLUS_PLUS      shift, and go to state 43
    MINUS          shift, and go to state 44
    MINUS_MINUS    shift, and go to state 45
    NOT            shift, and go to state 46

    array_identifier  go to state 48
    expression        go to state 110
    var               go to state 50
    constant          go to state 51
    call              go to state 52


state 71

  104 switchStatement: SWITCH LEFT_PAREN . expression RIGHT_PAREN LEFT_BRACE labeledStatementList RIGHT_BRACE

    IDENTIFIER     shift, and go to state 38
    INTEGER        shift, and go to state 39
    DOUBLE_NUMBER  shift, and go to state 40
    CHARACTER      shift, and go to state 41
    LEFT_PAREN     shift, and go to state 42
    PLUS_PLUS      shift, and go to state 43
    MINUS          shift, and go to state 44
    MINUS_MINUS    shift, and go to state 45
    NOT            shift, and go to state 46

    array_identifier  go to state 48
    expression        go to state 111
    var               go to state 50
    constant          go to state 51
    call              go to state 52


state 72

   82 compoundStatement: LEFT_BRACE . statements RIGHT_BRACE

    IF             shift, and go to state 31
    SWITCH         shift, and go to state 32
    DO             shift, and go to state 33
    WHILE          shift, and go to state 34
    FOR            shift, and go to state 35
    CONTINUE       shift, and go to state 36
    BREAK          shift, and go to state 37
    IDENTIFIER     shift, and go to state 38
    INTEGER        shift, and go to state 39
    DOUBLE_NUMBER  shift, and go to state 40
    CHARACTER      shift, and go to state 41
    LEFT_PAREN     shift, and go to state 42
    PLUS_PLUS      shift, and go to state 43
    MINUS          shift, and go to state 44
    MINUS_MINUS    shift, and go to state 45
    NOT            shift, and go to state 46
    SEMI           shift, and go to state 47

    $default  reduce using rule 69 (statements)

    array_identifier     go to state 48
    expression           go to state 49
    var                  go to state 50
    constant             go to state 51
    call                 go to state 52
    statements           go to state 112
    statement            go to state 55
    expressionStatement  go to state 56
    iterationStatement   go to state 57
    jumpStatement        go to state 58
    selectionStatement   go to state 59
    ifStatement          go to state 60
    switchStatement      go to state 61


state 73

   77 iterationStatement: DO compoundStatement . WHILE LEFT_PAREN expression RIGHT_PAREN SEMI

    WHILE  shift, and go to state 113


state 74

   76 iterationStatement: WHILE LEFT_PAREN . expression RIGHT_PAREN loopBody

    IDENTIFIER     shift, and go to state 38
    INTEGER        shift, and go to state 39
    DOUBLE_NUMBER  shift, and go to state 40
    CHARACTER      shift, and go to state 41
    LEFT_PAREN     shift, and go to state 42
    PLUS_PLUS      shift, and go to state 43
    MINUS          shift, and go to state 44
    MINUS_MINUS    shift, and go to state 45
    NOT            shift, and go to state 46

    array_identifier  go to state 48
    expression        go to state 114
    var               go to state 50
    constant          go to state 51
    call              go to state 52


state 75

   78 iterationStatement: FOR LEFT_PAREN . forCondition RIGHT_PAREN loopBody

    INT            shift, and go to state 1
    LONG           shift, and go to state 2
    FLOAT          shift, and go to state 3
    SHORT          shift, and go to state 4
    VOID           shift, and go to state 5
    DOUBLE         shift, and go to state 6
    CHAR           shift, and go to state 7
    IDENTIFIER     shift, and go to state 38
    INTEGER        shift, and go to state 39
    DOUBLE_NUMBER  shift, and go to state 40
    CHARACTER      shift, and go to state 41
    LEFT_PAREN     shift, and go to state 42
    PLUS_PLUS      shift, and go to state 43
    MINUS          shift, and go to state 44
    MINUS_MINUS    shift, and go to state 45
    NOT            shift, and go to state 46

    $default  reduce using rule 90 (forInitList)

    type              go to state 115
    array_identifier  go to state 48
    expression        go to state 116
    var               go to state 50
    constant          go to state 51
    call              go to state 52
    forCondition      go to state 117
    expressions       go to state 118
    forInitList       go to state 119
    forDeclaration    go to state 120


state 76

   94 jumpStatement: CONTINUE SEMI .

    $default  reduce using rule 94 (jumpStatement)


state 77

   95 jumpStatement: BREAK SEMI .

    $default  reduce using rule 95 (jumpStatement)


state 78

   47 call: IDENTIFIER LEFT_PAREN . args RIGHT_PAREN

    IDENTIFIER     shift, and go to state 38
    INTEGER        shift, and go to state 39
    DOUBLE_NUMBER  shift, and go to state 40
    CHARACTER      shift, and go to state 41
    LEFT_PAREN     shift, and go to state 42
    PLUS_PLUS      shift, and go to state 43
    MINUS          shift, and go to state 44
    MINUS_MINUS    shift, and go to state 45
    NOT            shift, and go to state 46

    $default  reduce using rule 49 (args)

    array_identifier  go to state 48
    expression        go to state 121
    var               go to state 50
    constant          go to state 51
    call              go to state 52
    args              go to state 122
    args_list         go to state 123


state 79

   18 expression: expression . PLUS expression
   19           | expression . MINUS expression
   20           | expression . MUL expression
   21           | expression . DIV expression
   22           | expression . MOD expression
   23           | LEFT_PAREN expression . RIGHT_PAREN
   24           | expression . LESS expression
   25           | expression . LESS_EQUAL expression
   26           | expression . GREATER expression
   27           | expression . GREATER_EQUAL expression
   28           | expression . AND_AND expression
   29           | expression . OR_OR expression
   31           | expression . EQUAL expression
   32           | expression . NOT_EQUAL expression

    RIGHT_PAREN    shift, and go to state 124
    LESS           shift, and go to state 85
    LESS_EQUAL     shift, and go to state 86
    GREATER        shift, and go to state 87
    GREATER_EQUAL  shift, and go to state 88
    PLUS           shift, and go to state 89
    MINUS          shift, and go to state 90
    DIV            shift, and go to state 91
    MOD            shift, and go to state 92
    MUL            shift, and go to state 93
    AND_AND        shift, and go to state 94
    OR_OR          shift, and go to state 95
    EQUAL          shift, and go to state 96
    NOT_EQUAL      shift, and go to state 97


state 80

   17 array_identifier: IDENTIFIER . LEFT_BRACKET INTEGER RIGHT_BRACKET
   42 var: IDENTIFIER .

    LEFT_BRACKET  shift, and go to state 27

    $default  reduce using rule 42 (var)


state 81

   35 expression: PLUS_PLUS var .

    $default  reduce using rule 35 (expression)


state 82

   18 expression: expression . PLUS expression
   19           | expression . MINUS expression
   20           | expression . MUL expression
   21           | expression . DIV expression
   22           | expression . MOD expression
   24           | expression . LESS expression
   25           | expression . LESS_EQUAL expression
   26           | expression . GREATER expression
   27           | expression . GREATER_EQUAL expression
   28           | expression . AND_AND expression
   29           | expression . OR_OR expression
   31           | expression . EQUAL expression
   32           | expression . NOT_EQUAL expression
   33           | MINUS expression .

    LESS           shift, and go to state 85
    LESS_EQUAL     shift, and go to state 86
    GREATER        shift, and go to state 87
    GREATER_EQUAL  shift, and go to state 88
    PLUS           shift, and go to state 89
    DIV            shift, and go to state 91
    MOD            shift, and go to state 92
    MUL            shift, and go to state 93
    AND_AND        shift, and go to state 94
    OR_OR          shift, and go to state 95
    EQUAL          shift, and go to state 96
    NOT_EQUAL      shift, and go to state 97

    LESS           [reduce using rule 33 (expression)]
    LESS_EQUAL     [reduce using rule 33 (expression)]
    GREATER        [reduce using rule 33 (expression)]
    GREATER_EQUAL  [reduce using rule 33 (expression)]
    PLUS           [reduce using rule 33 (expression)]
    DIV            [reduce using rule 33 (expression)]
    MOD            [reduce using rule 33 (expression)]
    MUL            [reduce using rule 33 (expression)]
    AND_AND        [reduce using rule 33 (expression)]
    OR_OR          [reduce using rule 33 (expression)]
    EQUAL          [reduce using rule 33 (expression)]
    NOT_EQUAL      [reduce using rule 33 (expression)]
    $default       reduce using rule 33 (expression)


state 83

   37 expression: MINUS_MINUS var .

    $default  reduce using rule 37 (expression)


state 84

   18 expression: expression . PLUS expression
   19           | expression . MINUS expression
   20           | expression . MUL expression
   21           | expression . DIV expression
   22           | expression . MOD expression
   24           | expression . LESS expression
   25           | expression . LESS_EQUAL expression
   26           | expression . GREATER expression
   27           | expression . GREATER_EQUAL expression
   28           | expression . AND_AND expression
   29           | expression . OR_OR expression
   30           | NOT expression .
   31           | expression . EQUAL expression
   32           | expression . NOT_EQUAL expression

    LESS           shift, and go to state 85
    LESS_EQUAL     shift, and go to state 86
    GREATER        shift, and go to state 87
    GREATER_EQUAL  shift, and go to state 88
    PLUS           shift, and go to state 89
    MINUS          shift, and go to state 90
    DIV            shift, and go to state 91
    MOD            shift, and go to state 92
    MUL            shift, and go to state 93
    AND_AND        shift, and go to state 94
    OR_OR          shift, and go to state 95
    EQUAL          shift, and go to state 96
    NOT_EQUAL      shift, and go to state 97

    LESS           [reduce using rule 30 (expression)]
    LESS_EQUAL     [reduce using rule 30 (expression)]
    GREATER        [reduce using rule 30 (expression)]
    GREATER_EQUAL  [reduce using rule 30 (expression)]
    PLUS           [reduce using rule 30 (expression)]
    MINUS          [reduce using rule 30 (expression)]
    DIV            [reduce using rule 30 (expression)]
    MOD            [reduce using rule 30 (expression)]
    MUL            [reduce using rule 30 (expression)]
    AND_AND        [reduce using rule 30 (expression)]
    OR_OR          [reduce using rule 30 (expression)]
    EQUAL          [reduce using rule 30 (expression)]
    NOT_EQUAL      [reduce using rule 30 (expression)]
    $default       reduce using rule 30 (expression)


state 85

   24 expression: expression LESS . expression

    IDENTIFIER     shift, and go to state 38
    INTEGER        shift, and go to state 39
    DOUBLE_NUMBER  shift, and go to state 40
    CHARACTER      shift, and go to state 41
    LEFT_PAREN     shift, and go to state 42
    PLUS_PLUS      shift, and go to state 43
    MINUS          shift, and go to state 44
    MINUS_MINUS    shift, and go to state 45
    NOT            shift, and go to state 46

    array_identifier  go to state 48
    expression        go to state 125
    var               go to state 50
    constant          go to state 51
    call              go to state 52


state 86

   25 expression: expression LESS_EQUAL . expression

    IDENTIFIER     shift, and go to state 38
    INTEGER        shift, and go to state 39
    DOUBLE_NUMBER  shift, and go to state 40
    CHARACTER      shift, and go to state 41
    LEFT_PAREN     shift, and go to state 42
    PLUS_PLUS      shift, and go to state 43
    MINUS          shift, and go to state 44
    MINUS_MINUS    shift, and go to state 45
    NOT            shift, and go to state 46

    array_identifier  go to state 48
    expression        go to state 126
    var               go to state 50
    constant          go to state 51
    call              go to state 52


state 87

   26 expression: expression GREATER . expression

    IDENTIFIER     shift, and go to state 38
    INTEGER        shift, and go to state 39
    DOUBLE_NUMBER  shift, and go to state 40
    CHARACTER      shift, and go to state 41
    LEFT_PAREN     shift, and go to state 42
    PLUS_PLUS      shift, and go to state 43
    MINUS          shift, and go to state 44
    MINUS_MINUS    shift, and go to state 45
    NOT            shift, and go to state 46

    array_identifier  go to state 48
    expression        go to state 127
    var               go to state 50
    constant          go to state 51
    call              go to state 52


state 88

   27 expression: expression GREATER_EQUAL . expression

    IDENTIFIER     shift, and go to state 38
    INTEGER        shift, and go to state 39
    DOUBLE_NUMBER  shift, and go to state 40
    CHARACTER      shift, and go to state 41
    LEFT_PAREN     shift, and go to state 42
    PLUS_PLUS      shift, and go to state 43
    MINUS          shift, and go to state 44
    MINUS_MINUS    shift, and go to state 45
    NOT            shift, and go to state 46

    array_identifier  go to state 48
    expression        go to state 128
    var               go to state 50
    constant          go to state 51
    call              go to state 52


state 89

   18 expression: expression PLUS . expression

    IDENTIFIER     shift, and go to state 38
    INTEGER        shift, and go to state 39
    DOUBLE_NUMBER  shift, and go to state 40
    CHARACTER      shift, and go to state 41
    LEFT_PAREN     shift, and go to state 42
    PLUS_PLUS      shift, and go to state 43
    MINUS          shift, and go to state 44
    MINUS_MINUS    shift, and go to state 45
    NOT            shift, and go to state 46

    array_identifier  go to state 48
    expression        go to state 129
    var               go to state 50
    constant          go to state 51
    call              go to state 52


state 90

   19 expression: expression MINUS . expression

    IDENTIFIER     shift, and go to state 38
    INTEGER        shift, and go to state 39
    DOUBLE_NUMBER  shift, and go to state 40
    CHARACTER      shift, and go to state 41
    LEFT_PAREN     shift, and go to state 42
    PLUS_PLUS      shift, and go to state 43
    MINUS          shift, and go to state 44
    MINUS_MINUS    shift, and go to state 45
    NOT            shift, and go to state 46

    array_identifier  go to state 48
    expression        go to state 130
    var               go to state 50
    constant          go to state 51
    call              go to state 52


state 91

   21 expression: expression DIV . expression

    IDENTIFIER     shift, and go to state 38
    INTEGER        shift, and go to state 39
    DOUBLE_NUMBER  shift, and go to state 40
    CHARACTER      shift, and go to state 41
    LEFT_PAREN     shift, and go to state 42
    PLUS_PLUS      shift, and go to state 43
    MINUS          shift, and go to state 44
    MINUS_MINUS    shift, and go to state 45
    NOT            shift, and go to state 46

    array_identifier  go to state 48
    expression        go to state 131
    var               go to state 50
    constant          go to state 51
    call              go to state 52


state 92

   22 expression: expression MOD . expression

    IDENTIFIER     shift, and go to state 38
    INTEGER        shift, and go to state 39
    DOUBLE_NUMBER  shift, and go to state 40
    CHARACTER      shift, and go to state 41
    LEFT_PAREN     shift, and go to state 42
    PLUS_PLUS      shift, and go to state 43
    MINUS          shift, and go to state 44
    MINUS_MINUS    shift, and go to state 45
    NOT            shift, and go to state 46

    array_identifier  go to state 48
    expression        go to state 132
    var               go to state 50
    constant          go to state 51
    call              go to state 52


state 93

   20 expression: expression MUL . expression

    IDENTIFIER     shift, and go to state 38
    INTEGER        shift, and go to state 39
    DOUBLE_NUMBER  shift, and go to state 40
    CHARACTER      shift, and go to state 41
    LEFT_PAREN     shift, and go to state 42
    PLUS_PLUS      shift, and go to state 43
    MINUS          shift, and go to state 44
    MINUS_MINUS    shift, and go to state 45
    NOT            shift, and go to state 46

    array_identifier  go to state 48
    expression        go to state 133
    var               go to state 50
    constant          go to state 51
    call              go to state 52


state 94

   28 expression: expression AND_AND . expression

    IDENTIFIER     shift, and go to state 38
    INTEGER        shift, and go to state 39
    DOUBLE_NUMBER  shift, and go to state 40
    CHARACTER      shift, and go to state 41
    LEFT_PAREN     shift, and go to state 42
    PLUS_PLUS      shift, and go to state 43
    MINUS          shift, and go to state 44
    MINUS_MINUS    shift, and go to state 45
    NOT            shift, and go to state 46

    array_identifier  go to state 48
    expression        go to state 134
    var               go to state 50
    constant          go to state 51
    call              go to state 52


state 95

   29 expression: expression OR_OR . expression

    IDENTIFIER     shift, and go to state 38
    INTEGER        shift, and go to state 39
    DOUBLE_NUMBER  shift, and go to state 40
    CHARACTER      shift, and go to state 41
    LEFT_PAREN     shift, and go to state 42
    PLUS_PLUS      shift, and go to state 43
    MINUS          shift, and go to state 44
    MINUS_MINUS    shift, and go to state 45
    NOT            shift, and go to state 46

    array_identifier  go to state 48
    expression        go to state 135
    var               go to state 50
    constant          go to state 51
    call              go to state 52


state 96

   31 expression: expression EQUAL . expression

    IDENTIFIER     shift, and go to state 38
    INTEGER        shift, and go to state 39
    DOUBLE_NUMBER  shift, and go to state 40
    CHARACTER      shift, and go to state 41
    LEFT_PAREN     shift, and go to state 42
    PLUS_PLUS      shift, and go to state 43
    MINUS          shift, and go to state 44
    MINUS_MINUS    shift, and go to state 45
    NOT            shift, and go to state 46

    array_identifier  go to state 48
    expression        go to state 136
    var               go to state 50
    constant          go to state 51
    call              go to state 52


state 97

   32 expression: expression NOT_EQUAL . expression

    IDENTIFIER     shift, and go to state 38
    INTEGER        shift, and go to state 39
    DOUBLE_NUMBER  shift, and go to state 40
    CHARACTER      shift, and go to state 41
    LEFT_PAREN     shift, and go to state 42
    PLUS_PLUS      shift, and go to state 43
    MINUS          shift, and go to state 44
    MINUS_MINUS    shift, and go to state 45
    NOT            shift, and go to state 46

    array_identifier  go to state 48
    expression        go to state 137
    var               go to state 50
    constant          go to state 51
    call              go to state 52


state 98

   74 expressionStatement: expression SEMI .

    $default  reduce using rule 74 (expressionStatement)


state 99

   36 expression: var PLUS_PLUS .

    $default  reduce using rule 36 (expression)


state 100

   38 expression: var MINUS_MINUS .

    $default  reduce using rule 38 (expression)


state 101

   34 expression: var ASSIGN . expression

    IDENTIFIER     shift, and go to state 38
    INTEGER        shift, and go to state 39
    DOUBLE_NUMBER  shift, and go to state 40
    CHARACTER      shift, and go to state 41
    LEFT_PAREN     shift, and go to state 42
    PLUS_PLUS      shift, and go to state 43
    MINUS          shift, and go to state 44
    MINUS_MINUS    shift, and go to state 45
    NOT            shift, and go to state 46

    array_identifier  go to state 48
    expression        go to state 138
    var               go to state 50
    constant          go to state 51
    call              go to state 52


state 102

   64 function_body: LEFT_BRACE function_statements RIGHT_BRACE .

    $default  reduce using rule 64 (function_body)


state 103

   66 return_statement: RETURN . IDENTIFIER SEMI

    IDENTIFIER  shift, and go to state 139


state 104

   65 function_statements: statements return_statement .

    $default  reduce using rule 65 (function_statements)


state 105

   68 statements: statement statements .

    $default  reduce using rule 68 (statements)


state 106

   63 function_arg: type IDENTIFIER .

    $default  reduce using rule 63 (function_arg)


state 107

   58 function_decl: type IDENTIFIER LEFT_PAREN function_args RIGHT_PAREN .

    $default  reduce using rule 58 (function_decl)


state 108

   62 function_arg_list: function_arg COMMA . function_arg_list

    INT     shift, and go to state 1
    LONG    shift, and go to state 2
    FLOAT   shift, and go to state 3
    SHORT   shift, and go to state 4
    VOID    shift, and go to state 5
    DOUBLE  shift, and go to state 6
    CHAR    shift, and go to state 7

    type               go to state 62
    function_arg_list  go to state 140
    function_arg       go to state 65


state 109

   17 array_identifier: IDENTIFIER LEFT_BRACKET INTEGER RIGHT_BRACKET .

    $default  reduce using rule 17 (array_identifier)


state 110

   18 expression: expression . PLUS expression
   19           | expression . MINUS expression
   20           | expression . MUL expression
   21           | expression . DIV expression
   22           | expression . MOD expression
   24           | expression . LESS expression
   25           | expression . LESS_EQUAL expression
   26           | expression . GREATER expression
   27           | expression . GREATER_EQUAL expression
   28           | expression . AND_AND expression
   29           | expression . OR_OR expression
   31           | expression . EQUAL expression
   32           | expression . NOT_EQUAL expression
   98 ifStatement: IF LEFT_PAREN expression . RIGHT_PAREN ifBody
   99            | IF LEFT_PAREN expression . RIGHT_PAREN ifBody ELSE elseBody

    RIGHT_PAREN    shift, and go to state 141
    LESS           shift, and go to state 85
    LESS_EQUAL     shift, and go to state 86
    GREATER        shift, and go to state 87
    GREATER_EQUAL  shift, and go to state 88
    PLUS           shift, and go to state 89
    MINUS          shift, and go to state 90
    DIV            shift, and go to state 91
    MOD            shift, and go to state 92
    MUL            shift, and go to state 93
    AND_AND        shift, and go to state 94
    OR_OR          shift, and go to state 95
    EQUAL          shift, and go to state 96
    NOT_EQUAL      shift, and go to state 97


state 111

   18 expression: expression . PLUS expression
   19           | expression . MINUS expression
   20           | expression . MUL expression
   21           | expression . DIV expression
   22           | expression . MOD expression
   24           | expression . LESS expression
   25           | expression . LESS_EQUAL expression
   26           | expression . GREATER expression
   27           | expression . GREATER_EQUAL expression
   28           | expression . AND_AND expression
   29           | expression . OR_OR expression
   31           | expression . EQUAL expression
   32           | expression . NOT_EQUAL expression
  104 switchStatement: SWITCH LEFT_PAREN expression . RIGHT_PAREN LEFT_BRACE labeledStatementList RIGHT_BRACE

    RIGHT_PAREN    shift, and go to state 142
    LESS           shift, and go to state 85
    LESS_EQUAL     shift, and go to state 86
    GREATER        shift, and go to state 87
    GREATER_EQUAL  shift, and go to state 88
    PLUS           shift, and go to state 89
    MINUS          shift, and go to state 90
    DIV            shift, and go to state 91
    MOD            shift, and go to state 92
    MUL            shift, and go to state 93
    AND_AND        shift, and go to state 94
    OR_OR          shift, and go to state 95
    EQUAL          shift, and go to state 96
    NOT_EQUAL      shift, and go to state 97


state 112

   82 compoundStatement: LEFT_BRACE statements . RIGHT_BRACE

    RIGHT_BRACE  shift, and go to state 143


state 113

   77 iterationStatement: DO compoundStatement WHILE . LEFT_PAREN expression RIGHT_PAREN SEMI

    LEFT_PAREN  shift, and go to state 144


state 114

   18 expression: expression . PLUS expression
   19           | expression . MINUS expression
   20           | expression . MUL expression
   21           | expression . DIV expression
   22           | expression . MOD expression
   24           | expression . LESS expression
   25           | expression . LESS_EQUAL expression
   26           | expression . GREATER expression
   27           | expression . GREATER_EQUAL expression
   28           | expression . AND_AND expression
   29           | expression . OR_OR expression
   31           | expression . EQUAL expression
   32           | expression . NOT_EQUAL expression
   76 iterationStatement: WHILE LEFT_PAREN expression . RIGHT_PAREN loopBody

    RIGHT_PAREN    shift, and go to state 145
    LESS           shift, and go to state 85
    LESS_EQUAL     shift, and go to state 86
    GREATER        shift, and go to state 87
    GREATER_EQUAL  shift, and go to state 88
    PLUS           shift, and go to state 89
    MINUS          shift, and go to state 90
    DIV            shift, and go to state 91
    MOD            shift, and go to state 92
    MUL            shift, and go to state 93
    AND_AND        shift, and go to state 94
    OR_OR          shift, and go to state 95
    EQUAL          shift, and go to state 96
    NOT_EQUAL      shift, and go to state 97


state 115

   93 forDeclaration: type . var_declaration_list

    IDENTIFIER  shift, and go to state 68

    var_declaration_list  go to state 146
    var_decl              go to state 21
    array_identifier      go to state 22


state 116

   18 expression: expression . PLUS expression
   19           | expression . MINUS expression
   20           | expression . MUL expression
   21           | expression . DIV expression
   22           | expression . MOD expression
   24           | expression . LESS expression
   25           | expression . LESS_EQUAL expression
   26           | expression . GREATER expression
   27           | expression . GREATER_EQUAL expression
   28           | expression . AND_AND expression
   29           | expression . OR_OR expression
   31           | expression . EQUAL expression
   32           | expression . NOT_EQUAL expression
   88 expressions: expression . COMMA expressions
   89            | expression .

    LESS           shift, and go to state 85
    LESS_EQUAL     shift, and go to state 86
    GREATER        shift, and go to state 87
    GREATER_EQUAL  shift, and go to state 88
    PLUS           shift, and go to state 89
    MINUS          shift, and go to state 90
    DIV            shift, and go to state 91
    MOD            shift, and go to state 92
    MUL            shift, and go to state 93
    AND_AND        shift, and go to state 94
    OR_OR          shift, and go to state 95
    EQUAL          shift, and go to state 96
    NOT_EQUAL      shift, and go to state 97
    COMMA          shift, and go to state 147

    $default  reduce using rule 89 (expressions)


state 117

   78 iterationStatement: FOR LEFT_PAREN forCondition . RIGHT_PAREN loopBody

    RIGHT_PAREN  shift, and go to state 148


state 118

   92 forInitList: expressions .

    $default  reduce using rule 92 (forInitList)


state 119

   83 forCondition: forInitList . SEMI forExpression SEMI incrementExpressionList

    SEMI  shift, and go to state 149


state 120

   91 forInitList: forDeclaration .

    $default  reduce using rule 91 (forInitList)


state 121

   18 expression: expression . PLUS expression
   19           | expression . MINUS expression
   20           | expression . MUL expression
   21           | expression . DIV expression
   22           | expression . MOD expression
   24           | expression . LESS expression
   25           | expression . LESS_EQUAL expression
   26           | expression . GREATER expression
   27           | expression . GREATER_EQUAL expression
   28           | expression . AND_AND expression
   29           | expression . OR_OR expression
   31           | expression . EQUAL expression
   32           | expression . NOT_EQUAL expression
   51 args_list: expression .

    LESS           shift, and go to state 85
    LESS_EQUAL     shift, and go to state 86
    GREATER        shift, and go to state 87
    GREATER_EQUAL  shift, and go to state 88
    PLUS           shift, and go to state 89
    MINUS          shift, and go to state 90
    DIV            shift, and go to state 91
    MOD            shift, and go to state 92
    MUL            shift, and go to state 93
    AND_AND        shift, and go to state 94
    OR_OR          shift, and go to state 95
    EQUAL          shift, and go to state 96
    NOT_EQUAL      shift, and go to state 97

    $default  reduce using rule 51 (args_list)


state 122

   47 call: IDENTIFIER LEFT_PAREN args . RIGHT_PAREN

    RIGHT_PAREN  shift, and go to state 150


state 123

   48 args: args_list .
   50 args_list: args_list . COMMA expression

    COMMA  shift, and go to state 151

    $default  reduce using rule 48 (args)


state 124

   23 expression: LEFT_PAREN expression RIGHT_PAREN .

    $default  reduce using rule 23 (expression)


state 125

   18 expression: expression . PLUS expression
   19           | expression . MINUS expression
   20           | expression . MUL expression
   21           | expression . DIV expression
   22           | expression . MOD expression
   24           | expression . LESS expression
   24           | expression LESS expression .
   25           | expression . LESS_EQUAL expression
   26           | expression . GREATER expression
   27           | expression . GREATER_EQUAL expression
   28           | expression . AND_AND expression
   29           | expression . OR_OR expression
   31           | expression . EQUAL expression
   32           | expression . NOT_EQUAL expression

    LESS           shift, and go to state 85
    LESS_EQUAL     shift, and go to state 86
    GREATER        shift, and go to state 87
    GREATER_EQUAL  shift, and go to state 88
    PLUS           shift, and go to state 89
    MINUS          shift, and go to state 90
    DIV            shift, and go to state 91
    MOD            shift, and go to state 92
    MUL            shift, and go to state 93
    AND_AND        shift, and go to state 94
    OR_OR          shift, and go to state 95
    EQUAL          shift, and go to state 96
    NOT_EQUAL      shift, and go to state 97

    LESS           [reduce using rule 24 (expression)]
    LESS_EQUAL     [reduce using rule 24 (expression)]
    GREATER        [reduce using rule 24 (expression)]
    GREATER_EQUAL  [reduce using rule 24 (expression)]
    PLUS           [reduce using rule 24 (expression)]
    MINUS          [reduce using rule 24 (expression)]
    DIV            [reduce using rule 24 (expression)]
    MOD            [reduce using rule 24 (expression)]
    MUL            [reduce using rule 24 (expression)]
    AND_AND        [reduce using rule 24 (expression)]
    OR_OR          [reduce using rule 24 (expression)]
    EQUAL          [reduce using rule 24 (expression)]
    NOT_EQUAL      [reduce using rule 24 (expression)]
    $default       reduce using rule 24 (expression)


state 126

   18 expression: expression . PLUS expression
   19           | expression . MINUS expression
   20           | expression . MUL expression
   21           | expression . DIV expression
   22           | expression . MOD expression
   24           | expression . LESS expression
   25           | expression . LESS_EQUAL expression
   25           | expression LESS_EQUAL expression .
   26           | expression . GREATER expression
   27           | expression . GREATER_EQUAL expression
   28           | expression . AND_AND expression
   29           | expression . OR_OR expression
   31           | expression . EQUAL expression
   32           | expression . NOT_EQUAL expression

    LESS           shift, and go to state 85
    LESS_EQUAL     shift, and go to state 86
    GREATER        shift, and go to state 87
    GREATER_EQUAL  shift, and go to state 88
    PLUS           shift, and go to state 89
    MINUS          shift, and go to state 90
    DIV            shift, and go to state 91
    MOD            shift, and go to state 92
    MUL            shift, and go to state 93
    AND_AND        shift, and go to state 94
    OR_OR          shift, and go to state 95
    EQUAL          shift, and go to state 96
    NOT_EQUAL      shift, and go to state 97

    LESS           [reduce using rule 25 (expression)]
    LESS_EQUAL     [reduce using rule 25 (expression)]
    GREATER        [reduce using rule 25 (expression)]
    GREATER_EQUAL  [reduce using rule 25 (expression)]
    PLUS           [reduce using rule 25 (expression)]
    MINUS          [reduce using rule 25 (expression)]
    DIV            [reduce using rule 25 (expression)]
    MOD            [reduce using rule 25 (expression)]
    MUL            [reduce using rule 25 (expression)]
    AND_AND        [reduce using rule 25 (expression)]
    OR_OR          [reduce using rule 25 (expression)]
    EQUAL          [reduce using rule 25 (expression)]
    NOT_EQUAL      [reduce using rule 25 (expression)]
    $default       reduce using rule 25 (expression)


state 127

   18 expression: expression . PLUS expression
   19           | expression . MINUS expression
   20           | expression . MUL expression
   21           | expression . DIV expression
   22           | expression . MOD expression
   24           | expression . LESS expression
   25           | expression . LESS_EQUAL expression
   26           | expression . GREATER expression
   26           | expression GREATER expression .
   27           | expression . GREATER_EQUAL expression
   28           | expression . AND_AND expression
   29           | expression . OR_OR expression
   31           | expression . EQUAL expression
   32           | expression . NOT_EQUAL expression

    LESS           shift, and go to state 85
    LESS_EQUAL     shift, and go to state 86
    GREATER        shift, and go to state 87
    GREATER_EQUAL  shift, and go to state 88
    PLUS           shift, and go to state 89
    MINUS          shift, and go to state 90
    DIV            shift, and go to state 91
    MOD            shift, and go to state 92
    MUL            shift, and go to state 93
    AND_AND        shift, and go to state 94
    OR_OR          shift, and go to state 95
    EQUAL          shift, and go to state 96
    NOT_EQUAL      shift, and go to state 97

    LESS           [reduce using rule 26 (expression)]
    LESS_EQUAL     [reduce using rule 26 (expression)]
    GREATER        [reduce using rule 26 (expression)]
    GREATER_EQUAL  [reduce using rule 26 (expression)]
    PLUS           [reduce using rule 26 (expression)]
    MINUS          [reduce using rule 26 (expression)]
    DIV            [reduce using rule 26 (expression)]
    MOD            [reduce using rule 26 (expression)]
    MUL            [reduce using rule 26 (expression)]
    AND_AND        [reduce using rule 26 (expression)]
    OR_OR          [reduce using rule 26 (expression)]
    EQUAL          [reduce using rule 26 (expression)]
    NOT_EQUAL      [reduce using rule 26 (expression)]
    $default       reduce using rule 26 (expression)


state 128

   18 expression: expression . PLUS expression
   19           | expression . MINUS expression
   20           | expression . MUL expression
   21           | expression . DIV expression
   22           | expression . MOD expression
   24           | expression . LESS expression
   25           | expression . LESS_EQUAL expression
   26           | expression . GREATER expression
   27           | expression . GREATER_EQUAL expression
   27           | expression GREATER_EQUAL expression .
   28           | expression . AND_AND expression
   29           | expression . OR_OR expression
   31           | expression . EQUAL expression
   32           | expression . NOT_EQUAL expression

    LESS           shift, and go to state 85
    LESS_EQUAL     shift, and go to state 86
    GREATER        shift, and go to state 87
    GREATER_EQUAL  shift, and go to state 88
    PLUS           shift, and go to state 89
    MINUS          shift, and go to state 90
    DIV            shift, and go to state 91
    MOD            shift, and go to state 92
    MUL            shift, and go to state 93
    AND_AND        shift, and go to state 94
    OR_OR          shift, and go to state 95
    EQUAL          shift, and go to state 96
    NOT_EQUAL      shift, and go to state 97

    LESS           [reduce using rule 27 (expression)]
    LESS_EQUAL     [reduce using rule 27 (expression)]
    GREATER        [reduce using rule 27 (expression)]
    GREATER_EQUAL  [reduce using rule 27 (expression)]
    PLUS           [reduce using rule 27 (expression)]
    MINUS          [reduce using rule 27 (expression)]
    DIV            [reduce using rule 27 (expression)]
    MOD            [reduce using rule 27 (expression)]
    MUL            [reduce using rule 27 (expression)]
    AND_AND        [reduce using rule 27 (expression)]
    OR_OR          [reduce using rule 27 (expression)]
    EQUAL          [reduce using rule 27 (expression)]
    NOT_EQUAL      [reduce using rule 27 (expression)]
    $default       reduce using rule 27 (expression)


state 129

   18 expression: expression . PLUS expression
   18           | expression PLUS expression .
   19           | expression . MINUS expression
   20           | expression . MUL expression
   21           | expression . DIV expression
   22           | expression . MOD expression
   24           | expression . LESS expression
   25           | expression . LESS_EQUAL expression
   26           | expression . GREATER expression
   27           | expression . GREATER_EQUAL expression
   28           | expression . AND_AND expression
   29           | expression . OR_OR expression
   31           | expression . EQUAL expression
   32           | expression . NOT_EQUAL expression

    LESS           shift, and go to state 85
    LESS_EQUAL     shift, and go to state 86
    GREATER        shift, and go to state 87
    GREATER_EQUAL  shift, and go to state 88
    PLUS           shift, and go to state 89
    MINUS          shift, and go to state 90
    DIV            shift, and go to state 91
    MOD            shift, and go to state 92
    MUL            shift, and go to state 93
    AND_AND        shift, and go to state 94
    OR_OR          shift, and go to state 95
    EQUAL          shift, and go to state 96
    NOT_EQUAL      shift, and go to state 97

    LESS           [reduce using rule 18 (expression)]
    LESS_EQUAL     [reduce using rule 18 (expression)]
    GREATER        [reduce using rule 18 (expression)]
    GREATER_EQUAL  [reduce using rule 18 (expression)]
    PLUS           [reduce using rule 18 (expression)]
    MINUS          [reduce using rule 18 (expression)]
    DIV            [reduce using rule 18 (expression)]
    MOD            [reduce using rule 18 (expression)]
    MUL            [reduce using rule 18 (expression)]
    AND_AND        [reduce using rule 18 (expression)]
    OR_OR          [reduce using rule 18 (expression)]
    EQUAL          [reduce using rule 18 (expression)]
    NOT_EQUAL      [reduce using rule 18 (expression)]
    $default       reduce using rule 18 (expression)


state 130

   18 expression: expression . PLUS expression
   19           | expression . MINUS expression
   19           | expression MINUS expression .
   20           | expression . MUL expression
   21           | expression . DIV expression
   22           | expression . MOD expression
   24           | expression . LESS expression
   25           | expression . LESS_EQUAL expression
   26           | expression . GREATER expression
   27           | expression . GREATER_EQUAL expression
   28           | expression . AND_AND expression
   29           | expression . OR_OR expression
   31           | expression . EQUAL expression
   32           | expression . NOT_EQUAL expression

    LESS           shift, and go to state 85
    LESS_EQUAL     shift, and go to state 86
    GREATER        shift, and go to state 87
    GREATER_EQUAL  shift, and go to state 88
    PLUS           shift, and go to state 89
    DIV            shift, and go to state 91
    MOD            shift, and go to state 92
    MUL            shift, and go to state 93
    AND_AND        shift, and go to state 94
    OR_OR          shift, and go to state 95
    EQUAL          shift, and go to state 96
    NOT_EQUAL      shift, and go to state 97

    LESS           [reduce using rule 19 (expression)]
    LESS_EQUAL     [reduce using rule 19 (expression)]
    GREATER        [reduce using rule 19 (expression)]
    GREATER_EQUAL  [reduce using rule 19 (expression)]
    PLUS           [reduce using rule 19 (expression)]
    DIV            [reduce using rule 19 (expression)]
    MOD            [reduce using rule 19 (expression)]
    MUL            [reduce using rule 19 (expression)]
    AND_AND        [reduce using rule 19 (expression)]
    OR_OR          [reduce using rule 19 (expression)]
    EQUAL          [reduce using rule 19 (expression)]
    NOT_EQUAL      [reduce using rule 19 (expression)]
    $default       reduce using rule 19 (expression)


state 131

   18 expression: expression . PLUS expression
   19           | expression . MINUS expression
   20           | expression . MUL expression
   21           | expression . DIV expression
   21           | expression DIV expression .
   22           | expression . MOD expression
   24           | expression . LESS expression
   25           | expression . LESS_EQUAL expression
   26           | expression . GREATER expression
   27           | expression . GREATER_EQUAL expression
   28           | expression . AND_AND expression
   29           | expression . OR_OR expression
   31           | expression . EQUAL expression
   32           | expression . NOT_EQUAL expression

    LESS           shift, and go to state 85
    LESS_EQUAL     shift, and go to state 86
    GREATER        shift, and go to state 87
    GREATER_EQUAL  shift, and go to state 88
    PLUS           shift, and go to state 89
    MINUS          shift, and go to state 90
    DIV            shift, and go to state 91
    MOD            shift, and go to state 92
    MUL            shift, and go to state 93
    AND_AND        shift, and go to state 94
    OR_OR          shift, and go to state 95
    EQUAL          shift, and go to state 96
    NOT_EQUAL      shift, and go to state 97

    LESS           [reduce using rule 21 (expression)]
    LESS_EQUAL     [reduce using rule 21 (expression)]
    GREATER        [reduce using rule 21 (expression)]
    GREATER_EQUAL  [reduce using rule 21 (expression)]
    PLUS           [reduce using rule 21 (expression)]
    MINUS          [reduce using rule 21 (expression)]
    DIV            [reduce using rule 21 (expression)]
    MOD            [reduce using rule 21 (expression)]
    MUL            [reduce using rule 21 (expression)]
    AND_AND        [reduce using rule 21 (expression)]
    OR_OR          [reduce using rule 21 (expression)]
    EQUAL          [reduce using rule 21 (expression)]
    NOT_EQUAL      [reduce using rule 21 (expression)]
    $default       reduce using rule 21 (expression)


state 132

   18 expression: expression . PLUS expression
   19           | expression . MINUS expression
   20           | expression . MUL expression
   21           | expression . DIV expression
   22           | expression . MOD expression
   22           | expression MOD expression .
   24           | expression . LESS expression
   25           | expression . LESS_EQUAL expression
   26           | expression . GREATER expression
   27           | expression . GREATER_EQUAL expression
   28           | expression . AND_AND expression
   29           | expression . OR_OR expression
   31           | expression . EQUAL expression
   32           | expression . NOT_EQUAL expression

    LESS           shift, and go to state 85
    LESS_EQUAL     shift, and go to state 86
    GREATER        shift, and go to state 87
    GREATER_EQUAL  shift, and go to state 88
    PLUS           shift, and go to state 89
    MINUS          shift, and go to state 90
    DIV            shift, and go to state 91
    MOD            shift, and go to state 92
    MUL            shift, and go to state 93
    AND_AND        shift, and go to state 94
    OR_OR          shift, and go to state 95
    EQUAL          shift, and go to state 96
    NOT_EQUAL      shift, and go to state 97

    LESS           [reduce using rule 22 (expression)]
    LESS_EQUAL     [reduce using rule 22 (expression)]
    GREATER        [reduce using rule 22 (expression)]
    GREATER_EQUAL  [reduce using rule 22 (expression)]
    PLUS           [reduce using rule 22 (expression)]
    MINUS          [reduce using rule 22 (expression)]
    DIV            [reduce using rule 22 (expression)]
    MOD            [reduce using rule 22 (expression)]
    MUL            [reduce using rule 22 (expression)]
    AND_AND        [reduce using rule 22 (expression)]
    OR_OR          [reduce using rule 22 (expression)]
    EQUAL          [reduce using rule 22 (expression)]
    NOT_EQUAL      [reduce using rule 22 (expression)]
    $default       reduce using rule 22 (expression)


state 133

   18 expression: expression . PLUS expression
   19           | expression . MINUS expression
   20           | expression . MUL expression
   20           | expression MUL expression .
   21           | expression . DIV expression
   22           | expression . MOD expression
   24           | expression . LESS expression
   25           | expression . LESS_EQUAL expression
   26           | expression . GREATER expression
   27           | expression . GREATER_EQUAL expression
   28           | expression . AND_AND expression
   29           | expression . OR_OR expression
   31           | expression . EQUAL expression
   32           | expression . NOT_EQUAL expression

    LESS           shift, and go to state 85
    LESS_EQUAL     shift, and go to state 86
    GREATER        shift, and go to state 87
    GREATER_EQUAL  shift, and go to state 88
    PLUS           shift, and go to state 89
    MINUS          shift, and go to state 90
    DIV            shift, and go to state 91
    MOD            shift, and go to state 92
    MUL            shift, and go to state 93
    AND_AND        shift, and go to state 94
    OR_OR          shift, and go to state 95
    EQUAL          shift, and go to state 96
    NOT_EQUAL      shift, and go to state 97

    LESS           [reduce using rule 20 (expression)]
    LESS_EQUAL     [reduce using rule 20 (expression)]
    GREATER        [reduce using rule 20 (expression)]
    GREATER_EQUAL  [reduce using rule 20 (expression)]
    PLUS           [reduce using rule 20 (expression)]
    MINUS          [reduce using rule 20 (expression)]
    DIV            [reduce using rule 20 (expression)]
    MOD            [reduce using rule 20 (expression)]
    MUL            [reduce using rule 20 (expression)]
    AND_AND        [reduce using rule 20 (expression)]
    OR_OR          [reduce using rule 20 (expression)]
    EQUAL          [reduce using rule 20 (expression)]
    NOT_EQUAL      [reduce using rule 20 (expression)]
    $default       reduce using rule 20 (expression)


state 134

   18 expression: expression . PLUS expression
   19           | expression . MINUS expression
   20           | expression . MUL expression
   21           | expression . DIV expression
   22           | expression . MOD expression
   24           | expression . LESS expression
   25           | expression . LESS_EQUAL expression
   26           | expression . GREATER expression
   27           | expression . GREATER_EQUAL expression
   28           | expression . AND_AND expression
   28           | expression AND_AND expression .
   29           | expression . OR_OR expression
   31           | expression . EQUAL expression
   32           | expression . NOT_EQUAL expression

    LESS           shift, and go to state 85
    LESS_EQUAL     shift, and go to state 86
    GREATER        shift, and go to state 87
    GREATER_EQUAL  shift, and go to state 88
    PLUS           shift, and go to state 89
    MINUS          shift, and go to state 90
    DIV            shift, and go to state 91
    MOD            shift, and go to state 92
    MUL            shift, and go to state 93
    AND_AND        shift, and go to state 94
    OR_OR          shift, and go to state 95
    EQUAL          shift, and go to state 96
    NOT_EQUAL      shift, and go to state 97

    LESS           [reduce using rule 28 (expression)]
    LESS_EQUAL     [reduce using rule 28 (expression)]
    GREATER        [reduce using rule 28 (expression)]
    GREATER_EQUAL  [reduce using rule 28 (expression)]
    PLUS           [reduce using rule 28 (expression)]
    MINUS          [reduce using rule 28 (expression)]
    DIV            [reduce using rule 28 (expression)]
    MOD            [reduce using rule 28 (expression)]
    MUL            [reduce using rule 28 (expression)]
    AND_AND        [reduce using rule 28 (expression)]
    OR_OR          [reduce using rule 28 (expression)]
    EQUAL          [reduce using rule 28 (expression)]
    NOT_EQUAL      [reduce using rule 28 (expression)]
    $default       reduce using rule 28 (expression)


state 135

   18 expression: expression . PLUS expression
   19           | expression . MINUS expression
   20           | expression . MUL expression
   21           | expression . DIV expression
   22           | expression . MOD expression
   24           | expression . LESS expression
   25           | expression . LESS_EQUAL expression
   26           | expression . GREATER expression
   27           | expression . GREATER_EQUAL expression
   28           | expression . AND_AND expression
   29           | expression . OR_OR expression
   29           | expression OR_OR expression .
   31           | expression . EQUAL expression
   32           | expression . NOT_EQUAL expression

    LESS           shift, and go to state 85
    LESS_EQUAL     shift, and go to state 86
    GREATER        shift, and go to state 87
    GREATER_EQUAL  shift, and go to state 88
    PLUS           shift, and go to state 89
    MINUS          shift, and go to state 90
    DIV            shift, and go to state 91
    MOD            shift, and go to state 92
    MUL            shift, and go to state 93
    AND_AND        shift, and go to state 94
    OR_OR          shift, and go to state 95
    EQUAL          shift, and go to state 96
    NOT_EQUAL      shift, and go to state 97

    LESS           [reduce using rule 29 (expression)]
    LESS_EQUAL     [reduce using rule 29 (expression)]
    GREATER        [reduce using rule 29 (expression)]
    GREATER_EQUAL  [reduce using rule 29 (expression)]
    PLUS           [reduce using rule 29 (expression)]
    MINUS          [reduce using rule 29 (expression)]
    DIV            [reduce using rule 29 (expression)]
    MOD            [reduce using rule 29 (expression)]
    MUL            [reduce using rule 29 (expression)]
    AND_AND        [reduce using rule 29 (expression)]
    OR_OR          [reduce using rule 29 (expression)]
    EQUAL          [reduce using rule 29 (expression)]
    NOT_EQUAL      [reduce using rule 29 (expression)]
    $default       reduce using rule 29 (expression)


state 136

   18 expression: expression . PLUS expression
   19           | expression . MINUS expression
   20           | expression . MUL expression
   21           | expression . DIV expression
   22           | expression . MOD expression
   24           | expression . LESS expression
   25           | expression . LESS_EQUAL expression
   26           | expression . GREATER expression
   27           | expression . GREATER_EQUAL expression
   28           | expression . AND_AND expression
   29           | expression . OR_OR expression
   31           | expression . EQUAL expression
   31           | expression EQUAL expression .
   32           | expression . NOT_EQUAL expression

    LESS           shift, and go to state 85
    LESS_EQUAL     shift, and go to state 86
    GREATER        shift, and go to state 87
    GREATER_EQUAL  shift, and go to state 88
    PLUS           shift, and go to state 89
    MINUS          shift, and go to state 90
    DIV            shift, and go to state 91
    MOD            shift, and go to state 92
    MUL            shift, and go to state 93
    AND_AND        shift, and go to state 94
    OR_OR          shift, and go to state 95
    EQUAL          shift, and go to state 96
    NOT_EQUAL      shift, and go to state 97

    LESS           [reduce using rule 31 (expression)]
    LESS_EQUAL     [reduce using rule 31 (expression)]
    GREATER        [reduce using rule 31 (expression)]
    GREATER_EQUAL  [reduce using rule 31 (expression)]
    PLUS           [reduce using rule 31 (expression)]
    MINUS          [reduce using rule 31 (expression)]
    DIV            [reduce using rule 31 (expression)]
    MOD            [reduce using rule 31 (expression)]
    MUL            [reduce using rule 31 (expression)]
    AND_AND        [reduce using rule 31 (expression)]
    OR_OR          [reduce using rule 31 (expression)]
    EQUAL          [reduce using rule 31 (expression)]
    NOT_EQUAL      [reduce using rule 31 (expression)]
    $default       reduce using rule 31 (expression)


state 137

   18 expression: expression . PLUS expression
   19           | expression . MINUS expression
   20           | expression . MUL expression
   21           | expression . DIV expression
   22           | expression . MOD expression
   24           | expression . LESS expression
   25           | expression . LESS_EQUAL expression
   26           | expression . GREATER expression
   27           | expression . GREATER_EQUAL expression
   28           | expression . AND_AND expression
   29           | expression . OR_OR expression
   31           | expression . EQUAL expression
   32           | expression . NOT_EQUAL expression
   32           | expression NOT_EQUAL expression .

    LESS           shift, and go to state 85
    LESS_EQUAL     shift, and go to state 86
    GREATER        shift, and go to state 87
    GREATER_EQUAL  shift, and go to state 88
    PLUS           shift, and go to state 89
    MINUS          shift, and go to state 90
    DIV            shift, and go to state 91
    MOD            shift, and go to state 92
    MUL            shift, and go to state 93
    AND_AND        shift, and go to state 94
    OR_OR          shift, and go to state 95
    EQUAL          shift, and go to state 96
    NOT_EQUAL      shift, and go to state 97

    LESS           [reduce using rule 32 (expression)]
    LESS_EQUAL     [reduce using rule 32 (expression)]
    GREATER        [reduce using rule 32 (expression)]
    GREATER_EQUAL  [reduce using rule 32 (expression)]
    PLUS           [reduce using rule 32 (expression)]
    MINUS          [reduce using rule 32 (expression)]
    DIV            [reduce using rule 32 (expression)]
    MOD            [reduce using rule 32 (expression)]
    MUL            [reduce using rule 32 (expression)]
    AND_AND        [reduce using rule 32 (expression)]
    OR_OR          [reduce using rule 32 (expression)]
    EQUAL          [reduce using rule 32 (expression)]
    NOT_EQUAL      [reduce using rule 32 (expression)]
    $default       reduce using rule 32 (expression)


state 138

   18 expression: expression . PLUS expression
   19           | expression . MINUS expression
   20           | expression . MUL expression
   21           | expression . DIV expression
   22           | expression . MOD expression
   24           | expression . LESS expression
   25           | expression . LESS_EQUAL expression
   26           | expression . GREATER expression
   27           | expression . GREATER_EQUAL expression
   28           | expression . AND_AND expression
   29           | expression . OR_OR expression
   31           | expression . EQUAL expression
   32           | expression . NOT_EQUAL expression
   34           | var ASSIGN expression .

    LESS           shift, and go to state 85
    LESS_EQUAL     shift, and go to state 86
    GREATER        shift, and go to state 87
    GREATER_EQUAL  shift, and go to state 88
    PLUS           shift, and go to state 89
    MINUS          shift, and go to state 90
    DIV            shift, and go to state 91
    MOD            shift, and go to state 92
    MUL            shift, and go to state 93
    AND_AND        shift, and go to state 94
    OR_OR          shift, and go to state 95
    EQUAL          shift, and go to state 96
    NOT_EQUAL      shift, and go to state 97

    LESS           [reduce using rule 34 (expression)]
    LESS_EQUAL     [reduce using rule 34 (expression)]
    GREATER        [reduce using rule 34 (expression)]
    GREATER_EQUAL  [reduce using rule 34 (expression)]
    PLUS           [reduce using rule 34 (expression)]
    MINUS          [reduce using rule 34 (expression)]
    DIV            [reduce using rule 34 (expression)]
    MOD            [reduce using rule 34 (expression)]
    MUL            [reduce using rule 34 (expression)]
    AND_AND        [reduce using rule 34 (expression)]
    OR_OR          [reduce using rule 34 (expression)]
    EQUAL          [reduce using rule 34 (expression)]
    NOT_EQUAL      [reduce using rule 34 (expression)]
    $default       reduce using rule 34 (expression)


state 139

   66 return_statement: RETURN IDENTIFIER . SEMI

    SEMI  shift, and go to state 152


state 140

   62 function_arg_list: function_arg COMMA function_arg_list .

    $default  reduce using rule 62 (function_arg_list)


state 141

   98 ifStatement: IF LEFT_PAREN expression RIGHT_PAREN . ifBody
   99            | IF LEFT_PAREN expression RIGHT_PAREN . ifBody ELSE elseBody

    IF             shift, and go to state 31
    SWITCH         shift, and go to state 32
    DO             shift, and go to state 33
    WHILE          shift, and go to state 34
    FOR            shift, and go to state 35
    CONTINUE       shift, and go to state 36
    BREAK          shift, and go to state 37
    IDENTIFIER     shift, and go to state 38
    INTEGER        shift, and go to state 39
    DOUBLE_NUMBER  shift, and go to state 40
    CHARACTER      shift, and go to state 41
    LEFT_PAREN     shift, and go to state 42
    LEFT_BRACE     shift, and go to state 72
    PLUS_PLUS      shift, and go to state 43
    MINUS          shift, and go to state 44
    MINUS_MINUS    shift, and go to state 45
    NOT            shift, and go to state 46
    SEMI           shift, and go to state 47

    array_identifier     go to state 48
    expression           go to state 49
    var                  go to state 50
    constant             go to state 51
    call                 go to state 52
    statement            go to state 153
    expressionStatement  go to state 56
    iterationStatement   go to state 57
    compoundStatement    go to state 154
    jumpStatement        go to state 58
    selectionStatement   go to state 59
    ifStatement          go to state 60
    ifBody               go to state 155
    switchStatement      go to state 61


state 142

  104 switchStatement: SWITCH LEFT_PAREN expression RIGHT_PAREN . LEFT_BRACE labeledStatementList RIGHT_BRACE

    LEFT_BRACE  shift, and go to state 156


state 143

   82 compoundStatement: LEFT_BRACE statements RIGHT_BRACE .

    $default  reduce using rule 82 (compoundStatement)


state 144

   77 iterationStatement: DO compoundStatement WHILE LEFT_PAREN . expression RIGHT_PAREN SEMI

    IDENTIFIER     shift, and go to state 38
    INTEGER        shift, and go to state 39
    DOUBLE_NUMBER  shift, and go to state 40
    CHARACTER      shift, and go to state 41
    LEFT_PAREN     shift, and go to state 42
    PLUS_PLUS      shift, and go to state 43
    MINUS          shift, and go to state 44
    MINUS_MINUS    shift, and go to state 45
    NOT            shift, and go to state 46

    array_identifier  go to state 48
    expression        go to state 157
    var               go to state 50
    constant          go to state 51
    call              go to state 52


state 145

   76 iterationStatement: WHILE LEFT_PAREN expression RIGHT_PAREN . loopBody

    IF             shift, and go to state 31
    SWITCH         shift, and go to state 32
    DO             shift, and go to state 33
    WHILE          shift, and go to state 34
    FOR            shift, and go to state 35
    CONTINUE       shift, and go to state 36
    BREAK          shift, and go to state 37
    IDENTIFIER     shift, and go to state 38
    INTEGER        shift, and go to state 39
    DOUBLE_NUMBER  shift, and go to state 40
    CHARACTER      shift, and go to state 41
    LEFT_PAREN     shift, and go to state 42
    LEFT_BRACE     shift, and go to state 72
    PLUS_PLUS      shift, and go to state 43
    MINUS          shift, and go to state 44
    MINUS_MINUS    shift, and go to state 45
    NOT            shift, and go to state 46
    SEMI           shift, and go to state 158

    array_identifier     go to state 48
    expression           go to state 49
    var                  go to state 50
    constant             go to state 51
    call                 go to state 52
    statement            go to state 159
    expressionStatement  go to state 56
    iterationStatement   go to state 57
    loopBody             go to state 160
    compoundStatement    go to state 161
    jumpStatement        go to state 58
    selectionStatement   go to state 59
    ifStatement          go to state 60
    switchStatement      go to state 61


state 146

   12 var_declaration_list: var_declaration_list . COMMA var_decl
   93 forDeclaration: type var_declaration_list .

    COMMA  shift, and go to state 29

    $default  reduce using rule 93 (forDeclaration)


state 147

   88 expressions: expression COMMA . expressions

    IDENTIFIER     shift, and go to state 38
    INTEGER        shift, and go to state 39
    DOUBLE_NUMBER  shift, and go to state 40
    CHARACTER      shift, and go to state 41
    LEFT_PAREN     shift, and go to state 42
    PLUS_PLUS      shift, and go to state 43
    MINUS          shift, and go to state 44
    MINUS_MINUS    shift, and go to state 45
    NOT            shift, and go to state 46

    array_identifier  go to state 48
    expression        go to state 116
    var               go to state 50
    constant          go to state 51
    call              go to state 52
    expressions       go to state 162


state 148

   78 iterationStatement: FOR LEFT_PAREN forCondition RIGHT_PAREN . loopBody

    IF             shift, and go to state 31
    SWITCH         shift, and go to state 32
    DO             shift, and go to state 33
    WHILE          shift, and go to state 34
    FOR            shift, and go to state 35
    CONTINUE       shift, and go to state 36
    BREAK          shift, and go to state 37
    IDENTIFIER     shift, and go to state 38
    INTEGER        shift, and go to state 39
    DOUBLE_NUMBER  shift, and go to state 40
    CHARACTER      shift, and go to state 41
    LEFT_PAREN     shift, and go to state 42
    LEFT_BRACE     shift, and go to state 72
    PLUS_PLUS      shift, and go to state 43
    MINUS          shift, and go to state 44
    MINUS_MINUS    shift, and go to state 45
    NOT            shift, and go to state 46
    SEMI           shift, and go to state 158

    array_identifier     go to state 48
    expression           go to state 49
    var                  go to state 50
    constant             go to state 51
    call                 go to state 52
    statement            go to state 159
    expressionStatement  go to state 56
    iterationStatement   go to state 57
    loopBody             go to state 163
    compoundStatement    go to state 161
    jumpStatement        go to state 58
    selectionStatement   go to state 59
    ifStatement          go to state 60
    switchStatement      go to state 61


state 149

   83 forCondition: forInitList SEMI . forExpression SEMI incrementExpressionList

    IDENTIFIER     shift, and go to state 38
    INTEGER        shift, and go to state 39
    DOUBLE_NUMBER  shift, and go to state 40
    CHARACTER      shift, and go to state 41
    LEFT_PAREN     shift, and go to state 42
    PLUS_PLUS      shift, and go to state 43
    MINUS          shift, and go to state 44
    MINUS_MINUS    shift, and go to state 45
    NOT            shift, and go to state 46

    $default  reduce using rule 85 (forExpression)

    array_identifier  go to state 48
    expression        go to state 164
    var               go to state 50
    constant          go to state 51
    call              go to state 52
    forExpression     go to state 165


state 150

   47 call: IDENTIFIER LEFT_PAREN args RIGHT_PAREN .

    $default  reduce using rule 47 (call)


state 151

   50 args_list: args_list COMMA . expression

    IDENTIFIER     shift, and go to state 38
    INTEGER        shift, and go to state 39
    DOUBLE_NUMBER  shift, and go to state 40
    CHARACTER      shift, and go to state 41
    LEFT_PAREN     shift, and go to state 42
    PLUS_PLUS      shift, and go to state 43
    MINUS          shift, and go to state 44
    MINUS_MINUS    shift, and go to state 45
    NOT            shift, and go to state 46

    array_identifier  go to state 48
    expression        go to state 166
    var               go to state 50
    constant          go to state 51
    call              go to state 52


state 152

   66 return_statement: RETURN IDENTIFIER SEMI .

    $default  reduce using rule 66 (return_statement)


state 153

  101 ifBody: statement .

    $default  reduce using rule 101 (ifBody)


state 154

  100 ifBody: compoundStatement .

    $default  reduce using rule 100 (ifBody)


state 155

   98 ifStatement: IF LEFT_PAREN expression RIGHT_PAREN ifBody .
   99            | IF LEFT_PAREN expression RIGHT_PAREN ifBody . ELSE elseBody

    ELSE  shift, and go to state 167

    ELSE      [reduce using rule 98 (ifStatement)]
    $default  reduce using rule 98 (ifStatement)


state 156

  104 switchStatement: SWITCH LEFT_PAREN expression RIGHT_PAREN LEFT_BRACE . labeledStatementList RIGHT_BRACE

    CASE     shift, and go to state 168
    DEFAULT  shift, and go to state 169

    $default  reduce using rule 106 (labeledStatementList)

    labeledStatementList  go to state 170
    labeledStatement      go to state 171


state 157

   18 expression: expression . PLUS expression
   19           | expression . MINUS expression
   20           | expression . MUL expression
   21           | expression . DIV expression
   22           | expression . MOD expression
   24           | expression . LESS expression
   25           | expression . LESS_EQUAL expression
   26           | expression . GREATER expression
   27           | expression . GREATER_EQUAL expression
   28           | expression . AND_AND expression
   29           | expression . OR_OR expression
   31           | expression . EQUAL expression
   32           | expression . NOT_EQUAL expression
   77 iterationStatement: DO compoundStatement WHILE LEFT_PAREN expression . RIGHT_PAREN SEMI

    RIGHT_PAREN    shift, and go to state 172
    LESS           shift, and go to state 85
    LESS_EQUAL     shift, and go to state 86
    GREATER        shift, and go to state 87
    GREATER_EQUAL  shift, and go to state 88
    PLUS           shift, and go to state 89
    MINUS          shift, and go to state 90
    DIV            shift, and go to state 91
    MOD            shift, and go to state 92
    MUL            shift, and go to state 93
    AND_AND        shift, and go to state 94
    OR_OR          shift, and go to state 95
    EQUAL          shift, and go to state 96
    NOT_EQUAL      shift, and go to state 97


state 158

   75 expressionStatement: SEMI .
   81 loopBody: SEMI .

    IF             reduce using rule 75 (expressionStatement)
    IF             [reduce using rule 81 (loopBody)]
    ELSE           reduce using rule 75 (expressionStatement)
    ELSE           [reduce using rule 81 (loopBody)]
    SWITCH         reduce using rule 75 (expressionStatement)
    SWITCH         [reduce using rule 81 (loopBody)]
    CASE           reduce using rule 75 (expressionStatement)
    CASE           [reduce using rule 81 (loopBody)]
    DO             reduce using rule 75 (expressionStatement)
    DO             [reduce using rule 81 (loopBody)]
    WHILE          reduce using rule 75 (expressionStatement)
    WHILE          [reduce using rule 81 (loopBody)]
    FOR            reduce using rule 75 (expressionStatement)
    FOR            [reduce using rule 81 (loopBody)]
    CONTINUE       reduce using rule 75 (expressionStatement)
    CONTINUE       [reduce using rule 81 (loopBody)]
    BREAK          reduce using rule 75 (expressionStatement)
    BREAK          [reduce using rule 81 (loopBody)]
    RETURN         reduce using rule 75 (expressionStatement)
    RETURN         [reduce using rule 81 (loopBody)]
    DEFAULT        reduce using rule 75 (expressionStatement)
    DEFAULT        [reduce using rule 81 (loopBody)]
    IDENTIFIER     reduce using rule 75 (expressionStatement)
    IDENTIFIER     [reduce using rule 81 (loopBody)]
    INTEGER        reduce using rule 75 (expressionStatement)
    INTEGER        [reduce using rule 81 (loopBody)]
    DOUBLE_NUMBER  reduce using rule 75 (expressionStatement)
    DOUBLE_NUMBER  [reduce using rule 81 (loopBody)]
    CHARACTER      reduce using rule 75 (expressionStatement)
    CHARACTER      [reduce using rule 81 (loopBody)]
    LEFT_PAREN     reduce using rule 75 (expressionStatement)
    LEFT_PAREN     [reduce using rule 81 (loopBody)]
    RIGHT_BRACE    reduce using rule 75 (expressionStatement)
    RIGHT_BRACE    [reduce using rule 81 (loopBody)]
    PLUS_PLUS      reduce using rule 75 (expressionStatement)
    PLUS_PLUS      [reduce using rule 81 (loopBody)]
    MINUS          reduce using rule 75 (expressionStatement)
    MINUS          [reduce using rule 81 (loopBody)]
    MINUS_MINUS    reduce using rule 75 (expressionStatement)
    MINUS_MINUS    [reduce using rule 81 (loopBody)]
    NOT            reduce using rule 75 (expressionStatement)
    NOT            [reduce using rule 81 (loopBody)]
    SEMI           reduce using rule 75 (expressionStatement)
    SEMI           [reduce using rule 81 (loopBody)]
    $default       reduce using rule 75 (expressionStatement)


state 159

   79 loopBody: statement .

    $default  reduce using rule 79 (loopBody)


state 160

   76 iterationStatement: WHILE LEFT_PAREN expression RIGHT_PAREN loopBody .

    $default  reduce using rule 76 (iterationStatement)


state 161

   80 loopBody: compoundStatement .

    $default  reduce using rule 80 (loopBody)


state 162

   88 expressions: expression COMMA expressions .

    $default  reduce using rule 88 (expressions)


state 163

   78 iterationStatement: FOR LEFT_PAREN forCondition RIGHT_PAREN loopBody .

    $default  reduce using rule 78 (iterationStatement)


state 164

   18 expression: expression . PLUS expression
   19           | expression . MINUS expression
   20           | expression . MUL expression
   21           | expression . DIV expression
   22           | expression . MOD expression
   24           | expression . LESS expression
   25           | expression . LESS_EQUAL expression
   26           | expression . GREATER expression
   27           | expression . GREATER_EQUAL expression
   28           | expression . AND_AND expression
   29           | expression . OR_OR expression
   31           | expression . EQUAL expression
   32           | expression . NOT_EQUAL expression
   84 forExpression: expression .

    LESS           shift, and go to state 85
    LESS_EQUAL     shift, and go to state 86
    GREATER        shift, and go to state 87
    GREATER_EQUAL  shift, and go to state 88
    PLUS           shift, and go to state 89
    MINUS          shift, and go to state 90
    DIV            shift, and go to state 91
    MOD            shift, and go to state 92
    MUL            shift, and go to state 93
    AND_AND        shift, and go to state 94
    OR_OR          shift, and go to state 95
    EQUAL          shift, and go to state 96
    NOT_EQUAL      shift, and go to state 97

    $default  reduce using rule 84 (forExpression)


state 165

   83 forCondition: forInitList SEMI forExpression . SEMI incrementExpressionList

    SEMI  shift, and go to state 173


state 166

   18 expression: expression . PLUS expression
   19           | expression . MINUS expression
   20           | expression . MUL expression
   21           | expression . DIV expression
   22           | expression . MOD expression
   24           | expression . LESS expression
   25           | expression . LESS_EQUAL expression
   26           | expression . GREATER expression
   27           | expression . GREATER_EQUAL expression
   28           | expression . AND_AND expression
   29           | expression . OR_OR expression
   31           | expression . EQUAL expression
   32           | expression . NOT_EQUAL expression
   50 args_list: args_list COMMA expression .

    LESS           shift, and go to state 85
    LESS_EQUAL     shift, and go to state 86
    GREATER        shift, and go to state 87
    GREATER_EQUAL  shift, and go to state 88
    PLUS           shift, and go to state 89
    MINUS          shift, and go to state 90
    DIV            shift, and go to state 91
    MOD            shift, and go to state 92
    MUL            shift, and go to state 93
    AND_AND        shift, and go to state 94
    OR_OR          shift, and go to state 95
    EQUAL          shift, and go to state 96
    NOT_EQUAL      shift, and go to state 97

    $default  reduce using rule 50 (args_list)


state 167

   99 ifStatement: IF LEFT_PAREN expression RIGHT_PAREN ifBody ELSE . elseBody

    IF             shift, and go to state 31
    SWITCH         shift, and go to state 32
    DO             shift, and go to state 33
    WHILE          shift, and go to state 34
    FOR            shift, and go to state 35
    CONTINUE       shift, and go to state 36
    BREAK          shift, and go to state 37
    IDENTIFIER     shift, and go to state 38
    INTEGER        shift, and go to state 39
    DOUBLE_NUMBER  shift, and go to state 40
    CHARACTER      shift, and go to state 41
    LEFT_PAREN     shift, and go to state 42
    LEFT_BRACE     shift, and go to state 72
    PLUS_PLUS      shift, and go to state 43
    MINUS          shift, and go to state 44
    MINUS_MINUS    shift, and go to state 45
    NOT            shift, and go to state 46
    SEMI           shift, and go to state 47

    array_identifier     go to state 48
    expression           go to state 49
    var                  go to state 50
    constant             go to state 51
    call                 go to state 52
    statement            go to state 174
    expressionStatement  go to state 56
    iterationStatement   go to state 57
    compoundStatement    go to state 175
    jumpStatement        go to state 58
    selectionStatement   go to state 59
    ifStatement          go to state 60
    elseBody             go to state 176
    switchStatement      go to state 61


state 168

  107 labeledStatement: CASE . constant COLON statements

    INTEGER        shift, and go to state 39
    DOUBLE_NUMBER  shift, and go to state 40
    CHARACTER      shift, and go to state 41

    constant  go to state 177


state 169

  108 labeledStatement: DEFAULT . COLON statements

    COLON  shift, and go to state 178


state 170

  104 switchStatement: SWITCH LEFT_PAREN expression RIGHT_PAREN LEFT_BRACE labeledStatementList . RIGHT_BRACE

    RIGHT_BRACE  shift, and go to state 179


state 171

  105 labeledStatementList: labeledStatement . labeledStatementList

    CASE     shift, and go to state 168
    DEFAULT  shift, and go to state 169

    $default  reduce using rule 106 (labeledStatementList)

    labeledStatementList  go to state 180
    labeledStatement      go to state 171


state 172

   77 iterationStatement: DO compoundStatement WHILE LEFT_PAREN expression RIGHT_PAREN . SEMI

    SEMI  shift, and go to state 181


state 173

   83 forCondition: forInitList SEMI forExpression SEMI . incrementExpressionList

    IDENTIFIER     shift, and go to state 38
    INTEGER        shift, and go to state 39
    DOUBLE_NUMBER  shift, and go to state 40
    CHARACTER      shift, and go to state 41
    LEFT_PAREN     shift, and go to state 42
    PLUS_PLUS      shift, and go to state 43
    MINUS          shift, and go to state 44
    MINUS_MINUS    shift, and go to state 45
    NOT            shift, and go to state 46

    $default  reduce using rule 87 (incrementExpressionList)

    array_identifier         go to state 48
    expression               go to state 116
    var                      go to state 50
    constant                 go to state 51
    call                     go to state 52
    incrementExpressionList  go to state 182
    expressions              go to state 183


state 174

  103 elseBody: statement .

    $default  reduce using rule 103 (elseBody)


state 175

  102 elseBody: compoundStatement .

    $default  reduce using rule 102 (elseBody)


state 176

   99 ifStatement: IF LEFT_PAREN expression RIGHT_PAREN ifBody ELSE elseBody .

    $default  reduce using rule 99 (ifStatement)


state 177

  107 labeledStatement: CASE constant . COLON statements

    COLON  shift, and go to state 184


state 178

  108 labeledStatement: DEFAULT COLON . statements

    IF             shift, and go to state 31
    SWITCH         shift, and go to state 32
    DO             shift, and go to state 33
    WHILE          shift, and go to state 34
    FOR            shift, and go to state 35
    CONTINUE       shift, and go to state 36
    BREAK          shift, and go to state 37
    IDENTIFIER     shift, and go to state 38
    INTEGER        shift, and go to state 39
    DOUBLE_NUMBER  shift, and go to state 40
    CHARACTER      shift, and go to state 41
    LEFT_PAREN     shift, and go to state 42
    PLUS_PLUS      shift, and go to state 43
    MINUS          shift, and go to state 44
    MINUS_MINUS    shift, and go to state 45
    NOT            shift, and go to state 46
    SEMI           shift, and go to state 47

    $default  reduce using rule 69 (statements)

    array_identifier     go to state 48
    expression           go to state 49
    var                  go to state 50
    constant             go to state 51
    call                 go to state 52
    statements           go to state 185
    statement            go to state 55
    expressionStatement  go to state 56
    iterationStatement   go to state 57
    jumpStatement        go to state 58
    selectionStatement   go to state 59
    ifStatement          go to state 60
    switchStatement      go to state 61


state 179

  104 switchStatement: SWITCH LEFT_PAREN expression RIGHT_PAREN LEFT_BRACE labeledStatementList RIGHT_BRACE .

    $default  reduce using rule 104 (switchStatement)


state 180

  105 labeledStatementList: labeledStatement labeledStatementList .

    $default  reduce using rule 105 (labeledStatementList)


state 181

   77 iterationStatement: DO compoundStatement WHILE LEFT_PAREN expression RIGHT_PAREN SEMI .

    $default  reduce using rule 77 (iterationStatement)


state 182

   83 forCondition: forInitList SEMI forExpression SEMI incrementExpressionList .

    $default  reduce using rule 83 (forCondition)


state 183

   86 incrementExpressionList: expressions .

    $default  reduce using rule 86 (incrementExpressionList)


state 184

  107 labeledStatement: CASE constant COLON . statements

    IF             shift, and go to state 31
    SWITCH         shift, and go to state 32
    DO             shift, and go to state 33
    WHILE          shift, and go to state 34
    FOR            shift, and go to state 35
    CONTINUE       shift, and go to state 36
    BREAK          shift, and go to state 37
    IDENTIFIER     shift, and go to state 38
    INTEGER        shift, and go to state 39
    DOUBLE_NUMBER  shift, and go to state 40
    CHARACTER      shift, and go to state 41
    LEFT_PAREN     shift, and go to state 42
    PLUS_PLUS      shift, and go to state 43
    MINUS          shift, and go to state 44
    MINUS_MINUS    shift, and go to state 45
    NOT            shift, and go to state 46
    SEMI           shift, and go to state 47

    $default  reduce using rule 69 (statements)

    array_identifier     go to state 48
    expression           go to state 49
    var                  go to state 50
    constant             go to state 51
    call                 go to state 52
    statements           go to state 186
    statement            go to state 55
    expressionStatement  go to state 56
    iterationStatement   go to state 57
    jumpStatement        go to state 58
    selectionStatement   go to state 59
    ifStatement          go to state 60
    switchStatement      go to state 61


state 185

  108 labeledStatement: DEFAULT COLON statements .

    $default  reduce using rule 108 (labeledStatement)


state 186

  107 labeledStatement: CASE constant COLON statements .

    $default  reduce using rule 107 (labeledStatement)
